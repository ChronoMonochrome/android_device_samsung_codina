From 3f181b6a1a92aa782b17d17fdc84a73cf78fc56d Mon Sep 17 00:00:00 2001
From: Flex1911 <dedsa2002@gmail.com>
Date: Fri, 7 Apr 2017 12:56:44 +0300
Subject: [PATCH 13/31] build: allow to disable recovery-two-step.img
 generation

Android 7.1.2 introduced new mechanism for recovery updating in two-step OTAs.
Although, recovery-two-step.img generation may be completely broken on some devices with custom mkbootimg handling.
We can use recovery.img as base for that devices, so recovery-two-step.img generation will not be required in this case.
Let's add new TARGET_NO_TWO_STEP_RECOVERY flag to skip recovery-two-step.img generation during target files packaging if we need it.
---
 core/Makefile                                 |  3 +++
 tools/releasetools/add_img_to_target_files.py | 22 ++++++++++++----------
 2 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/core/Makefile b/core/Makefile
index 141e77b07..67fd921fa 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -2595,6 +2595,9 @@ endif
 ifeq ($(TARGET_NOT_USE_GZIP_RECOVERY_RAMDISK),true)
 	$(hide) echo "no_gzip_recovery_ramdisk=true" >> $(zip_root)/META/misc_info.txt
 endif
+ifeq ($(TARGET_NO_TWO_STEP_RECOVERY),true)
+	$(hide) echo "no_two_step_recovery=true" >> $(zip_root)/META/misc_info.txt
+endif
 ifeq ($(BOARD_AVB_ENABLE),true)
 	$(hide) echo "avb_enable=true" >> $(zip_root)/META/misc_info.txt
 	$(hide) echo "avb_vbmeta_key_path=$(BOARD_AVB_KEY_PATH)" >> $(zip_root)/META/misc_info.txt
diff --git a/tools/releasetools/add_img_to_target_files.py b/tools/releasetools/add_img_to_target_files.py
index 1a08cb6fa..ea0ff95d3 100755
--- a/tools/releasetools/add_img_to_target_files.py
+++ b/tools/releasetools/add_img_to_target_files.py
@@ -546,6 +546,7 @@ def AddImagesToTargetFiles(filename):
     images_dir = None
 
   has_recovery = (OPTIONS.info_dict.get("no_recovery") != "true")
+  use_two_step_recovery = (OPTIONS.info_dict.get("no_two_step_recovery") != "true")
 
   if OPTIONS.info_dict.get("avb_enable") == "true":
     fp = None
@@ -598,16 +599,17 @@ def AddImagesToTargetFiles(filename):
         else:
           recovery_image.WriteToDir(OPTIONS.input_tmp)
 
-      banner("recovery (two-step image)")
-      # The special recovery.img for two-step package use.
-      recovery_two_step_image = common.GetBootableImage(
-          "IMAGES/recovery-two-step.img", "recovery-two-step.img",
-          OPTIONS.input_tmp, "RECOVERY", two_step_image=True)
-      if recovery_two_step_image:
-        if output_zip:
-          recovery_two_step_image.AddToZip(output_zip)
-        else:
-          recovery_two_step_image.WriteToDir(OPTIONS.input_tmp)
+      if use_two_step_recovery:
+        banner("recovery (two-step image)")
+        # The special recovery.img for two-step package use.
+        recovery_two_step_image = common.GetBootableImage(
+            "IMAGES/recovery-two-step.img", "recovery-two-step.img",
+            OPTIONS.input_tmp, "RECOVERY", two_step_image=True)
+        if recovery_two_step_image:
+          if output_zip:
+            recovery_two_step_image.AddToZip(output_zip)
+          else:
+            recovery_two_step_image.WriteToDir(OPTIONS.input_tmp)
 
   banner("system")
   system_img_path = AddSystem(
-- 
2.11.0

