From e69adcb28c40a3aa7a0ba8dfa5bf7eb505d83bb7 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sun, 8 Nov 2015 06:49:22 +0200
Subject: [PATCH] Fix boot.img compilation

Change-Id: Id74cb1fee1b9aad29df197601e41abdcb2acc93f
---
 core/tasks/kernel.mk         | 32 +-------------------------------
 tools/releasetools/common.py |  3 ++-
 2 files changed, 3 insertions(+), 32 deletions(-)

diff --git a/core/tasks/kernel.mk b/core/tasks/kernel.mk
index d6a81c9..7baa00b 100644
--- a/core/tasks/kernel.mk
+++ b/core/tasks/kernel.mk
@@ -139,29 +139,7 @@ define clean-module-folder
 endef
 
 ifeq ($(TARGET_ARCH),arm)
-    ifneq ($(USE_CCACHE),)
-     # search executable
-      ccache =
-      ccache := $(shell which ccache)
-      ifeq ($(ccache),)
-        ifneq ($(strip $(wildcard $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_EXTRA_TAG)/ccache/ccache)),)
-          ccache := $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_EXTRA_TAG)/ccache/ccache
-        else
-          ifneq ($(strip $(wildcard $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_TAG)/ccache/ccache)),)
-            ccache := $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_TAG)/ccache/ccache
-          endif
-        endif
-      endif
-    endif
-    ifneq ($(TARGET_KERNEL_CUSTOM_TOOLCHAIN),)
-        ifeq ($(HOST_OS),darwin)
-            ARM_CROSS_COMPILE:=CROSS_COMPILE="$(ccache) $(ANDROID_BUILD_TOP)/prebuilt/darwin-x86/toolchain/$(TARGET_KERNEL_CUSTOM_TOOLCHAIN)"
-        else
-            ARM_CROSS_COMPILE:=CROSS_COMPILE="$(ccache) $(ANDROID_BUILD_TOP)/prebuilt/linux-x86/toolchain/$(TARGET_KERNEL_CUSTOM_TOOLCHAIN)"
-        endif
-    else
-        ARM_CROSS_COMPILE:=CROSS_COMPILE="$(ccache) $(ARM_EABI_TOOLCHAIN)/arm-eabi-"
-    endif
+    ARM_CROSS_COMPILE:=CROSS_COMPILE=$(KERNEL_TOOLCHAIN)
     ccache = 
 endif
 
@@ -179,14 +157,6 @@ $(KERNEL_CONFIG): $(KERNEL_OUT)
 $(KERNEL_OUT)/piggy : $(TARGET_PREBUILT_INT_KERNEL)
 	$(hide) gunzip -c $(KERNEL_OUT)/arch/$(TARGET_ARCH)/boot/compressed/piggy.gzip > $(KERNEL_OUT)/piggy
 
-TARGET_KERNEL_BINARIES: $(KERNEL_OUT) $(KERNEL_CONFIG) $(KERNEL_HEADERS_INSTALL)
-	$(MAKE) -C $(KERNEL_SRC) O=$(KERNEL_OUT) ARCH=$(TARGET_ARCH) $(ARM_CROSS_COMPILE) $(TARGET_PREBUILT_INT_KERNEL_TYPE)
-	-$(MAKE) -C $(KERNEL_SRC) O=$(KERNEL_OUT) ARCH=$(TARGET_ARCH) $(ARM_CROSS_COMPILE) dtbs
-	-$(MAKE) -C $(KERNEL_SRC) O=$(KERNEL_OUT) ARCH=$(TARGET_ARCH) $(ARM_CROSS_COMPILE) modules
-	-$(MAKE) -C $(KERNEL_SRC) O=$(KERNEL_OUT) INSTALL_MOD_PATH=../../$(KERNEL_MODULES_INSTALL) ARCH=$(TARGET_ARCH) $(ARM_CROSS_COMPILE) modules_install
-	$(mv-modules)
-	$(clean-module-folder)
-
 $(TARGET_KERNEL_MODULES): TARGET_KERNEL_BINARIES
 
 $(TARGET_PREBUILT_INT_KERNEL): $(TARGET_KERNEL_MODULES)
diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 51c48e5..ec8e881 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -487,7 +487,7 @@ def CheckSize(data, target, info_dict):
 
   if target.endswith(".img"): target = target[:-4]
   mount_point = "/" + target
-
+  fs_type = None
   if info_dict["fstab"]:
     if mount_point == "/userdata_extra": mount_point = "/data"
     if mount_point == "/userdata": mount_point = "/data"
@@ -497,6 +497,7 @@ def CheckSize(data, target, info_dict):
     if "/" in device:
       device = device[device.rfind("/")+1:]
     limit = info_dict.get(device + "_size", None)
+
   if not fs_type or not limit: return
 
   if fs_type == "yaffs2":
-- 
1.9.1

