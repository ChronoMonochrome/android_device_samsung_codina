From beb73bba3541c4979a7665d6474cfbf53f0c3254 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Tue, 20 Oct 2015 23:48:27 +0300
Subject: [PATCH 2/6] Revert "hardware-ril_W0-Fix.patch"

This reverts commit 86c501f4d6874a118b05f3abf22ea5ccf4598d6e.
---
 rild/Android.mk |  4 ----
 rild/rild.c     | 35 +++++++++--------------------------
 2 files changed, 9 insertions(+), 30 deletions(-)

diff --git a/rild/Android.mk b/rild/Android.mk
index b47935f..8aae88d 100644
--- a/rild/Android.mk
+++ b/rild/Android.mk
@@ -24,10 +24,6 @@ ifeq ($(SIM_COUNT), 2)
     LOCAL_CFLAGS += -DANDROID_SIM_COUNT_2
 endif
 
-ifeq ($(BOARD_RIL_NO_MULTIPLE_CLIENTS),true)
-    LOCAL_CFLAGS += -DNO_MULTIPLE_CLIENTS
-endif
-
 LOCAL_MODULE:= rild
 LOCAL_MODULE_TAGS := optional
 
diff --git a/rild/rild.c b/rild/rild.c
index 19980ad..c63da38 100644
--- a/rild/rild.c
+++ b/rild/rild.c
@@ -48,9 +48,7 @@ static void usage(const char *argv0) {
     exit(EXIT_FAILURE);
 }
 
-#ifndef NO_MULTIPLE_CLIENTS
-extern char rild[MAX_SOCKET_NAME_LENGTH] __attribute__((weak));
-#endif
+extern char rild[MAX_SOCKET_NAME_LENGTH];
 
 extern void RIL_register (const RIL_RadioFunctions *callbacks);
 
@@ -73,7 +71,6 @@ extern void RIL_onUnsolicitedResponse(int unsolResponse, const void *data,
 extern void RIL_requestTimedCallback (RIL_TimedCallback callback,
         void *param, const struct timeval *relativeTime);
 
-extern void RIL_setRilSocketName(char * s) __attribute__((weak));
 
 static struct RIL_Env s_rilEnv = {
     RIL_onRequestComplete,
@@ -173,7 +170,6 @@ int main(int argc, char **argv) {
         }
     }
 
-#ifndef NO_MULTIPLE_CLIENTS
     if (clientId == NULL) {
         clientId = "0";
     } else if (atoi(clientId) >= MAX_RILDS) {
@@ -181,13 +177,8 @@ int main(int argc, char **argv) {
         exit(0);
     }
     if (strncmp(clientId, "0", MAX_CLIENT_ID_LENGTH)) {
-        if (RIL_setRilSocketName) {
-            RIL_setRilSocketName(strncat(rild, clientId, MAX_SOCKET_NAME_LENGTH));
-        } else {
-            RLOGE("Trying to instantiate multiple rild sockets without a compatible libril!");
-        }
+        RIL_setRilSocketName(strncat(rild, clientId, MAX_SOCKET_NAME_LENGTH));
     }
-#endif
 
     if (rilLibPath == NULL) {
         if ( 0 == property_get(LIB_PATH_PROPERTY, libPath, NULL)) {
@@ -348,11 +339,9 @@ OpenLib:
         argc = make_argv(args, rilArgv);
     }
 
-#ifndef NO_MULTIPLE_CLIENTS
     rilArgv[argc++] = "-c";
     rilArgv[argc++] = clientId;
     RLOGD("RIL_Init argc = %d clientId = %s", argc, rilArgv[argc-1]);
-#endif
 
     // Make sure there's a reasonable argv[0]
     rilArgv[0] = argv[0];
@@ -360,23 +349,17 @@ OpenLib:
     funcs = rilInit(&s_rilEnv, argc, rilArgv);
     RLOGD("RIL_Init rilInit completed");
 
-#ifndef NO_MULTIPLE_CLIENTS
-    if (funcs == NULL) {
-        /* Pre-multi-client qualcomm vendor libraries won't support "-c" either, so
-         * try again without it. This should only happen on ancient qcoms, so raise
-         * a big fat warning
-         */
-        argc -= 2;
-        RLOGE("============= Retrying RIL_Init without a client id. This is only required for very old versions,");
-        RLOGE("============= and you're likely to have more radio breakage elsewhere!");
-        funcs = rilInit(&s_rilEnv, argc, rilArgv);
-    }
-#endif
-
     RIL_register(funcs);
 
     RLOGD("RIL_Init RIL_register completed");
 
+    if (rilUimInit) {
+        RLOGD("RIL_register_socket started");
+        RIL_register_socket(rilUimInit, RIL_SAP_SOCKET, argc, rilArgv);
+    }
+
+    RLOGD("RIL_register_socket completed");
+
 done:
 
     RLOGD("RIL_Init starting sleep loop");
-- 
1.9.1

