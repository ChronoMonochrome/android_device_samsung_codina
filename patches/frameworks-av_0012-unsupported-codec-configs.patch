ACodec: skip a bunch of unsupported codec configs 

diff --git a/media/libstagefright/ACodec.cpp b/media/libstagefright/ACodec.cpp
index 726da21..f975c48 100644
--- a/media/libstagefright/ACodec.cpp
+++ b/media/libstagefright/ACodec.cpp
@@ -2255,12 +2255,13 @@ status_t ACodec::configureCodec(
         err = OK; // ignore error
     }
 
+/*
     int32_t priority;
     if (msg->findInt32("priority", &priority)) {
         err = setPriority(priority);
         err = OK; // ignore error
     }
-
+*/
     int32_t rateInt = -1;
     float rateFloat = -1;
     if (!msg->findFloat("operating-rate", &rateFloat)) {
@@ -3434,9 +3435,9 @@ status_t ACodec::setColorAspectsForVideoDecoder(
         // format, in case component does not support this enumeration.
         setColorAspectsIntoFormat(params.sAspects, outputFormat);
     }
-
+/*
     (void)initDescribeColorAspectsIndex();
-
+*/
     // communicate color aspects to codec
     return setCodecColorAspects(params);
 }
@@ -3898,13 +3899,13 @@ status_t ACodec::setupVideoEncoder(
     if (err != OK) {
         return err;
     }
-
+/*
     err = setHDRStaticInfoForVideoCodec(kPortIndexInput, msg, outputFormat);
     if (err == ERROR_UNSUPPORTED) { // support is optional
         ALOGI("[%s] cannot encode HDR static metadata. Ignoring.", mComponentName.c_str());
         err = OK;
     }
-
+*/
     if (err != OK) {
         return err;
     }
@@ -7254,7 +7255,7 @@ status_t ACodec::setParameters(const sp<AMessage> &params) {
             return err;
         }
     }
-
+/*
     float rate;
     if (params->findFloat("operating-rate", &rate) && rate > 0) {
         status_t err = setOperatingRate(rate, mIsVideo);
@@ -7285,6 +7286,7 @@ status_t ACodec::setParameters(const sp<AMessage> &params) {
         }
     }
 
+*/
     status_t err = configureTemporalLayers(params, false /* inConfigure */, mOutputFormat);
     if (err != OK) {
         err = OK; // ignore failure
