Subject: [PATCH] Update whitelist when installing system application

Symptom:
Background service whitelist doesn't work on downgrade application.
 1. Added application package name to whitelist XML
    (ex. /system/etc/sysconfig/config.xml)
 2. Update application
 3. Downgrade application
   (Settings->Apps & notifications->App info->Tap application
     -> menu -> UNINSTALL UPDATES)

Root cause:
Internally whitelist is managed by appid, not packagename.
When downgrading system app, appid is changed.
Also, reading of whitelist is done only at device startup.
When downgrading by user, whitelist does not work because the
application can not be specified correctly.

Solution:
If ACTION_PACKAGE_ADDED is received and the installed application
is a whitelist target application, add it to whitelist again.

diff --git a/services/core/java/com/android/server/DeviceIdleController.java b/services/core/java/com/android/server/DeviceIdleController.java
index fa041f28c28..cb201742f37 100644
--- a/services/core/java/com/android/server/DeviceIdleController.java
+++ b/services/core/java/com/android/server/DeviceIdleController.java
@@ -355,6 +355,34 @@ private void addEvent(int cmd) {
                         }
                     }
                 } break;
+                case Intent.ACTION_PACKAGE_ADDED: {
+                    Uri data = intent.getData();
+                    String ssp;
+                    if (data != null && (ssp = data.getSchemeSpecificPart()) != null
+                         && mPowerSaveWhitelistApps.containsKey(ssp)) {
+                        final PackageManager pm = getContext().getPackageManager();
+                        try {
+                            ApplicationInfo ai = pm.getApplicationInfo(ssp,
+                                      PackageManager.MATCH_SYSTEM_ONLY);
+                            int appid = UserHandle.getAppId(ai.uid);
+
+                            if (mPowerSaveWhitelistApps.get(ssp) != appid ) {
+                                if (DEBUG) Slog.d(TAG,"  appid is changed! current:" + mPowerSaveWhitelistApps.get(ssp)
+                                      + " new:" + appid + "  update whitelist.");
+
+                                // These apps are on both the whitelist-except-idle as well
+                                // as the full whitelist, so they apply in all cases.
+                                mPowerSaveWhitelistAppsExceptIdle.put(ai.packageName, appid);
+                                mPowerSaveWhitelistSystemAppIdsExceptIdle.put(appid, true);
+                                mPowerSaveWhitelistApps.put(ai.packageName, appid);
+                                mPowerSaveWhitelistSystemAppIds.put(appid, true);
+
+                                updateWhitelistAppIdsLocked();
+                            }
+                        } catch (PackageManager.NameNotFoundException e) {
+                        }
+                    }
+                } break;
             }
         }
     };
@@ -1494,6 +1522,11 @@ public void onBootPhase(int phase) {
                 filter.addDataScheme("package");
                 getContext().registerReceiver(mReceiver, filter);
 
+                filter = new IntentFilter();
+                filter.addAction(Intent.ACTION_PACKAGE_ADDED);
+                filter.addDataScheme("package");
+                getContext().registerReceiver(mReceiver, filter);
+
                 filter = new IntentFilter();
                 filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
                 getContext().registerReceiver(mReceiver, filter);
