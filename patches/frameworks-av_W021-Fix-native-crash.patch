 audio flinger: Fix native crash during underruns for patch track

When audio flinger removes an AudioTrack from the active list
in case of underrun, framecount gets reset to 0 in audio track
client during obtain buffer.
Server side patch track uses same frame count(0) to invoke obtain
buffer during retry post restart and it lead to crash.

Keep a copy of buffer frame count in patch track obtain buffer
and use it during retry.

diff --git a/services/audioflinger/Tracks.cpp b/services/audioflinger/Tracks.cpp
index 0e60109..5539aad 100644
--- a/services/audioflinger/Tracks.cpp
+++ b/services/audioflinger/Tracks.cpp
@@ -1521,9 +1521,11 @@ status_t AudioFlinger::PlaybackThread::PatchTrack::obtainBuffer(Proxy::Buffer* b
     status_t status = NO_ERROR;
     static const int32_t kMaxTries = 5;
     int32_t tryCounter = kMaxTries;
+    size_t  frameCount = buffer->mFrameCount;
     do {
         if (status == NOT_ENOUGH_DATA) {
             restartIfDisabled();
+            buffer->mFrameCount = frameCount;
         }
         status = mProxy->obtainBuffer(buffer, timeOut);
     } while ((status == NOT_ENOUGH_DATA) && (tryCounter-- > 0));
