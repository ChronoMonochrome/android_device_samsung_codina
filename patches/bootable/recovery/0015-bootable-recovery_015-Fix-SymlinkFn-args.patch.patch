From 8ec3a88d0ec6e69d1703166fa5bed3329593f188 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sat, 25 Aug 2018 17:11:50 +0300
Subject: [PATCH 15/15] bootable-recovery_015-Fix-SymlinkFn-args.patch

Change-Id: Id0bbb88cbf7f4e6bc1ad73cca7897faa017cbea7
---
 updater/install.cpp | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/updater/install.cpp b/updater/install.cpp
index a8ee4bf3..03db16d2 100644
--- a/updater/install.cpp
+++ b/updater/install.cpp
@@ -609,18 +609,20 @@ Value* SymlinkFn(const char* name, State* state, const std::vector<std::unique_p
   if (argv.size() == 0) {
     return ErrorAbort(state, kArgsParsingFailure, "%s() expects 1+ args, got %zu", name, argv.size());
   }
-  std::string target;
-  if (!Evaluate(state, argv[0], &target)) {
-    return nullptr;
-  }
 
-  std::vector<std::string> srcs;
-  if (!ReadArgs(state, argv, &srcs, 1, argv.size())) {
+  std::vector<std::string> args;
+  if (!ReadArgs(state, argv, &args)) {
     return ErrorAbort(state, kArgsParsingFailure, "%s(): Failed to parse the argument(s)", name);
   }
 
+  const auto& target = args[0];
+  if (target.empty()) {
+    return ErrorAbort(state, kArgsParsingFailure, "%s() target argument can't be empty", name);
+  }
+
   size_t bad = 0;
-  for (const auto& src : srcs) {
+  for (size_t i = 1; i < args.size(); ++i) {
+    const auto& src = args[i];
     if (unlink(src.c_str()) == -1 && errno != ENOENT) {
       PLOG(ERROR) << name << ": failed to remove " << src;
       ++bad;
-- 
2.11.0

