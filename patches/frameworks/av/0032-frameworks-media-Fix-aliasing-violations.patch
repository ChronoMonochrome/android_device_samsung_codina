From 58eda8afa3b38712bbc27bc343e1b45d57727165 Mon Sep 17 00:00:00 2001
From: Bernhard Rosenkraenzer <Bernhard.Rosenkranzer@linaro.org>
Date: Wed, 15 Aug 2012 21:03:23 +0200
Subject: [PATCH 32/95] frameworks/media: Fix aliasing violations

Change-Id: I0c3ad4d935abe6cf6df222f7d70381d868f15fe8
Signed-off-by: Bernhard Rosenkraenzer <Bernhard.Rosenkranzer@linaro.org>
Signed-off-by: Chet Kener <Cl3Kener@gmail.com>
---
 media/libmedia/Visualizer.cpp | 37 +++++++++++++++++++++++--------------
 1 file changed, 23 insertions(+), 14 deletions(-)

diff --git a/media/libmedia/Visualizer.cpp b/media/libmedia/Visualizer.cpp
index f91e3e4..c46b965 100644
--- a/media/libmedia/Visualizer.cpp
+++ b/media/libmedia/Visualizer.cpp
@@ -142,13 +142,17 @@ status_t Visualizer::setCaptureSize(uint32_t size)
         return INVALID_OPERATION;
     }
 
-    uint32_t buf32[sizeof(effect_param_t) / sizeof(uint32_t) + 2];
-    effect_param_t *p = (effect_param_t *)buf32;
+    union {
+        uint32_t buf32[sizeof(effect_param_t) / sizeof(uint32_t) + 2];
+        effect_param_t bufp;
+    };
+    effect_param_t *p = &bufp;
 
     p->psize = sizeof(uint32_t);
     p->vsize = sizeof(uint32_t);
-    *(int32_t *)p->data = VISUALIZER_PARAM_CAPTURE_SIZE;
-    *((int32_t *)p->data + 1)= size;
+    int32_t const vpcs = VISUALIZER_PARAM_CAPTURE_SIZE;
+    memcpy(&p->data, &vpcs, sizeof(vpcs));
+    memcpy(&p->data+sizeof(int32_t), &size, sizeof(size));
     status_t status = setParameter(p);
 
     ALOGV("setCaptureSize size %d  status %d p->status %d", size, status, p->status);
@@ -176,8 +180,10 @@ status_t Visualizer::setScalingMode(uint32_t mode) {
 
     p->psize = sizeof(uint32_t);
     p->vsize = sizeof(uint32_t);
-    *(int32_t *)p->data = VISUALIZER_PARAM_SCALING_MODE;
-    *((int32_t *)p->data + 1)= mode;
+
+    int32_t const vpsm = VISUALIZER_PARAM_SCALING_MODE;
+    memcpy(&p->data, &vpsm, sizeof(vpsm));
+    memcpy(&p->data+sizeof(int32_t), &mode, sizeof(mode));
     status_t status = setParameter(p);
 
     ALOGV("setScalingMode mode %d  status %d p->status %d", mode, status, p->status);
@@ -371,21 +377,24 @@ void Visualizer::periodicCapture()
 
 uint32_t Visualizer::initCaptureSize()
 {
-    uint32_t buf32[sizeof(effect_param_t) / sizeof(uint32_t) + 2];
-    effect_param_t *p = (effect_param_t *)buf32;
+    union {
+        uint32_t buf32[sizeof(effect_param_t) / sizeof(uint32_t) + 2];
+        effect_param_t p;
+    };
 
-    p->psize = sizeof(uint32_t);
-    p->vsize = sizeof(uint32_t);
-    *(int32_t *)p->data = VISUALIZER_PARAM_CAPTURE_SIZE;
-    status_t status = getParameter(p);
+    p.psize = sizeof(uint32_t);
+    p.vsize = sizeof(uint32_t);
+    int32_t const vpcs = VISUALIZER_PARAM_CAPTURE_SIZE;
+    memcpy(&p.data, &vpcs, sizeof(vpcs));
+    status_t status = getParameter(&p);
 
     if (status == NO_ERROR) {
-        status = p->status;
+        status = p.status;
     }
 
     uint32_t size = 0;
     if (status == NO_ERROR) {
-        size = *((int32_t *)p->data + 1);
+        memcpy(&size, &p.data+sizeof(int32_t), sizeof(int32_t));
     }
     mCaptureSize = size;
 
-- 
2.5.0

