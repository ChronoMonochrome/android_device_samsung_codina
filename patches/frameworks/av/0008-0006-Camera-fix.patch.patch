From bb2899bdb98877473ea341f91602b5a3f1d9ac94 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 8 Oct 2015 16:47:02 +0300
Subject: [PATCH 8/9] 0006-Camera-fix.patch

Change-Id: I7f9ace1eaea6d2fed2281624752c0e82a9403e93

Conflicts:
	camera/CameraParameters.cpp
	include/camera/CameraParameters.h

Conflicts:
	include/camera/CameraParameters.h
---
 camera/CameraParameters.cpp                        | 22 ++------
 include/camera/CameraParameters.h                  | 27 +++-------
 include/camera/CameraParametersExtra.h             | 48 +++++++++++++++++
 .../camera/CameraParametersExtraDurationTimer.h    | 62 ++++++++++++++++++++++
 .../device1/CameraHardwareInterface.h              |  3 ++
 5 files changed, 122 insertions(+), 40 deletions(-)
 create mode 100644 include/camera/CameraParametersExtra.h
 create mode 100644 include/camera/CameraParametersExtraDurationTimer.h

diff --git a/camera/CameraParameters.cpp b/camera/CameraParameters.cpp
index db2cd67..b8b1c6b 100644
--- a/camera/CameraParameters.cpp
+++ b/camera/CameraParameters.cpp
@@ -22,6 +22,7 @@
 #include <stdlib.h>
 #include <camera/CameraParameters.h>
 #include <system/graphics.h>
+#include "camera/CameraParametersExtra.h"
 
 namespace android {
 // Parameter keys to communicate between camera application and driver.
@@ -147,26 +148,11 @@ const char CameraParameters::SCENE_MODE_FIREWORKS[] = "fireworks";
 const char CameraParameters::SCENE_MODE_SPORTS[] = "sports";
 const char CameraParameters::SCENE_MODE_PARTY[] = "party";
 const char CameraParameters::SCENE_MODE_CANDLELIGHT[] = "candlelight";
-#ifdef STE_SAMSUNG_HARDWARE
-const char CameraParameters::SCENE_MODE_AQUA[] = "aqua";
-const char CameraParameters::SCENE_MODE_BACKLIGHT[] = "backlight";
-const char CameraParameters::SCENE_MODE_DUSKDAWN[] = "duskdawn";
-const char CameraParameters::SCENE_MODE_FALLCOLOR[] = "fallcolor";
-const char CameraParameters::SCENE_MODE_TEXT[] = "text";
-#endif
 const char CameraParameters::SCENE_MODE_BARCODE[] = "barcode";
 const char CameraParameters::SCENE_MODE_HDR[] = "hdr";
 
 const char CameraParameters::PIXEL_FORMAT_YUV422SP[] = "yuv422sp";
 const char CameraParameters::PIXEL_FORMAT_YUV420SP[] = "yuv420sp";
-#ifdef STE_HARDWARE
-const char CameraParameters::PIXEL_FORMAT_YUV420SPNV12[] = "yuv420spnv12";
-const char CameraParameters::PIXEL_FORMAT_YUV420MB[] = "yuv420mb";
-const char CameraParameters::PIXEL_FORMAT_YVU422SP[] = "yvu422sp";
-const char CameraParameters::PIXEL_FORMAT_YVU422P[] = "yvu422p";
-const char CameraParameters::PIXEL_FORMAT_YVU420SP[] = "yvu420sp";
-const char CameraParameters::PIXEL_FORMAT_YVU420P[]  = "yvu420p";
-#endif
 const char CameraParameters::PIXEL_FORMAT_YUV422I[] = "yuv422i-yuyv";
 const char CameraParameters::PIXEL_FORMAT_YUV420P[]  = "yuv420p";
 const char CameraParameters::PIXEL_FORMAT_RGB565[] = "rgb565";
@@ -188,10 +174,8 @@ const char CameraParameters::FOCUS_MODE_CONTINUOUS_PICTURE[] = "continuous-pictu
 const char CameraParameters::LIGHTFX_LOWLIGHT[] = "low-light";
 const char CameraParameters::LIGHTFX_HDR[] = "high-dynamic-range";
 
-#ifdef STE_HARDWARE
-// keys for record stride and sliceheight
-const char CameraParameters::KEY_RECORD_STRIDE[] = "record-stride";
-const char CameraParameters::KEY_RECORD_SLICE_HEIGHT[] = "record-slice-height";
+#ifdef CAMERA_PARAMETERS_EXTRA_C
+CAMERA_PARAMETERS_EXTRA_C
 #endif
 
 CameraParameters::CameraParameters()
diff --git a/include/camera/CameraParameters.h b/include/camera/CameraParameters.h
index 546b7bc..210ec30 100644
--- a/include/camera/CameraParameters.h
+++ b/include/camera/CameraParameters.h
@@ -19,6 +19,7 @@
 
 #include <utils/KeyedVector.h>
 #include <utils/String8.h>
+#include "camera/CameraParametersExtra.h"
 
 namespace android {
 
@@ -603,13 +604,6 @@ public:
     static const char SCENE_MODE_SPORTS[];
     static const char SCENE_MODE_PARTY[];
     static const char SCENE_MODE_CANDLELIGHT[];
-#ifdef STE_SAMSUNG_HARDWARE
-    static const char SCENE_MODE_AQUA[];
-    static const char SCENE_MODE_BACKLIGHT[];
-    static const char SCENE_MODE_DUSKDAWN[];
-    static const char SCENE_MODE_FALLCOLOR[];
-    static const char SCENE_MODE_TEXT[];
-#endif
     // Applications are looking for a barcode. Camera driver will be optimized
     // for barcode reading.
     static const char SCENE_MODE_BARCODE[];
@@ -622,14 +616,6 @@ public:
     // and KEY_VIDEO_FRAME_FORMAT
     static const char PIXEL_FORMAT_YUV422SP[];
     static const char PIXEL_FORMAT_YUV420SP[]; // NV21
-#ifdef STE_HARDWARE
-    static const char PIXEL_FORMAT_YUV420SPNV12[]; // NV12
-    static const char PIXEL_FORMAT_YVU422SP[];
-    static const char PIXEL_FORMAT_YVU422P[];
-    static const char PIXEL_FORMAT_YVU420SP[];
-    static const char PIXEL_FORMAT_YVU420P[];
-    static const char PIXEL_FORMAT_YUV420MB[];
-#endif
     static const char PIXEL_FORMAT_YUV422I[]; // YUY2
     static const char PIXEL_FORMAT_YUV420P[]; // YV12
     static const char PIXEL_FORMAT_RGB565[];
@@ -698,6 +684,11 @@ public:
     // High-dynamic range mode
     static const char LIGHTFX_HDR[];
 
+#ifdef CAMERA_PARAMETERS_EXTRA_H
+CAMERA_PARAMETERS_EXTRA_H
+#endif
+
+
     /**
      * Returns the the supported preview formats as an enum given in graphics.h
      * corrsponding to the format given in the input string or -1 if no such
@@ -705,12 +696,6 @@ public:
      */
     static int previewFormatToEnum(const char* format);
 
-#ifdef STE_HARDWARE
-    // keys for record stride and slice height
-    static const char KEY_RECORD_STRIDE[];
-    static const char KEY_RECORD_SLICE_HEIGHT[];
-#endif
-
 private:
     DefaultKeyedVector<String8,String8>    mMap;
 };
diff --git a/include/camera/CameraParametersExtra.h b/include/camera/CameraParametersExtra.h
new file mode 100644
index 0000000..1121e19
--- /dev/null
+++ b/include/camera/CameraParametersExtra.h
@@ -0,0 +1,48 @@
+/*
+ * Copyright (C) 2014 The CyanogenMod Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "camera/CameraParametersExtraDurationTimer.h"
+
+#define CAMERA_PARAMETERS_EXTRA_C \
+const char CameraParameters::SCENE_MODE_AQUA[] = "aqua"; \
+const char CameraParameters::SCENE_MODE_BACKLIGHT[] = "backlight"; \
+const char CameraParameters::SCENE_MODE_DUSKDAWN[] = "duskdawn"; \
+const char CameraParameters::SCENE_MODE_FALLCOLOR[] = "fallcolor"; \
+const char CameraParameters::SCENE_MODE_TEXT[] = "text"; \
+const char CameraParameters::PIXEL_FORMAT_YUV420SPNV12[] = "yuv420spnv12"; \
+const char CameraParameters::PIXEL_FORMAT_YUV420MB[] = "yuv420mb"; \
+const char CameraParameters::PIXEL_FORMAT_YVU422SP[] = "yvu422sp"; \
+const char CameraParameters::PIXEL_FORMAT_YVU422P[] = "yvu422p"; \
+const char CameraParameters::PIXEL_FORMAT_YVU420SP[] = "yvu420sp"; \
+const char CameraParameters::PIXEL_FORMAT_YVU420P[]  = "yvu420p"; \
+const char CameraParameters::KEY_RECORD_STRIDE[] = "record-stride"; \
+const char CameraParameters::KEY_RECORD_SLICE_HEIGHT[] = "record-slice-height"; \
+CAMERA_PARAMETERS_EXTRA_C_DURATION_TIMER \
+
+#define CAMERA_PARAMETERS_EXTRA_H \
+    static const char SCENE_MODE_AQUA[]; \
+    static const char SCENE_MODE_BACKLIGHT[]; \
+    static const char SCENE_MODE_DUSKDAWN[]; \
+    static const char SCENE_MODE_FALLCOLOR[]; \
+    static const char SCENE_MODE_TEXT[]; \
+    static const char PIXEL_FORMAT_YUV420SPNV12[]; \
+    static const char PIXEL_FORMAT_YVU422SP[]; \
+    static const char PIXEL_FORMAT_YVU422P[];  \
+    static const char PIXEL_FORMAT_YVU420SP[]; \
+    static const char PIXEL_FORMAT_YVU420P[]; \
+    static const char PIXEL_FORMAT_YUV420MB[]; \
+    static const char KEY_RECORD_STRIDE[]; \
+    static const char KEY_RECORD_SLICE_HEIGHT[];
diff --git a/include/camera/CameraParametersExtraDurationTimer.h b/include/camera/CameraParametersExtraDurationTimer.h
new file mode 100644
index 0000000..9f2f049
--- /dev/null
+++ b/include/camera/CameraParametersExtraDurationTimer.h
@@ -0,0 +1,62 @@
+#define CAMERA_PARAMETERS_EXTRA_C_DURATION_TIMER \
+\
+class DurationTimer { \
+public: \
+    DurationTimer() {} \
+    ~DurationTimer() {} \
+    void start(); \
+    void stop(); \
+    long long durationUsecs() const; \
+    static long long subtractTimevals(const struct timeval* ptv1, \
+        const struct timeval* ptv2); \
+    static void addToTimeval(struct timeval* ptv, long usec); \
+private: \
+    struct timeval  mStartWhen; \
+    struct timeval  mStopWhen; \
+}; \
+\
+void DurationTimer::start(void) \
+{ \
+    gettimeofday(&mStartWhen, NULL); \
+} \
+\
+void DurationTimer::stop(void) \
+{ \
+    gettimeofday(&mStopWhen, NULL); \
+} \
+\
+long long DurationTimer::durationUsecs(void) const \
+{ \
+    return (long) subtractTimevals(&mStopWhen, &mStartWhen); \
+} \
+\
+/*static*/ long long DurationTimer::subtractTimevals(const struct timeval* ptv1, \
+    const struct timeval* ptv2) \
+{ \
+    long long stop  = ((long long) ptv1->tv_sec) * 1000000LL + \
+                      ((long long) ptv1->tv_usec); \
+    long long start = ((long long) ptv2->tv_sec) * 1000000LL + \
+                      ((long long) ptv2->tv_usec); \
+    return stop - start; \
+} \
+\
+/*static*/ void DurationTimer::addToTimeval(struct timeval* ptv, long usec) \
+{ \
+    if (usec < 0) { \
+        ALOG(LOG_WARN, "", "Negative values not supported in addToTimeval\n"); \
+        return; \
+    } \
+\
+    if (ptv->tv_usec >= 1000000) { \
+        ptv->tv_sec += ptv->tv_usec / 1000000; \
+        ptv->tv_usec %= 1000000; \
+    } \
+\
+    ptv->tv_usec += usec % 1000000; \
+    if (ptv->tv_usec >= 1000000) { \
+        ptv->tv_usec -= 1000000; \
+        ptv->tv_sec++; \
+    } \
+    ptv->tv_sec += usec / 1000000; \
+} \
+/* END OF DEF */
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.h b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
index 7f14cd4..f036477 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.h
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
@@ -653,6 +653,9 @@ private:
 
     static int __set_usage(struct preview_stream_ops* w, int usage)
     {
+#ifdef STE_HARDWARE
+        usage |= GRALLOC_USAGE_PRIVATE_0;
+#endif
         ANativeWindow *a = anw(w);
         return native_window_set_usage(a, usage);
     }
-- 
1.9.1

