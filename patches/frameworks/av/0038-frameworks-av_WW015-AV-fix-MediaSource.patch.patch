From 5387bab94e6df2edd98588b384f376a0563a4771 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 26 Dec 2016 19:45:52 +0700
Subject: [PATCH 38/46] frameworks-av_WW015-AV-fix-MediaSource.patch

Change-Id: Iae444cb1e7ccf483c10f7112bc79356fbdec543d
---
 .../libmediaplayerservice/StagefrightRecorder.cpp  | 68 +++++++++++++++-------
 media/libmediaplayerservice/StagefrightRecorder.h  |  4 +-
 media/libstagefright/codecs/aacenc/AACEncoder.cpp  |  2 +-
 media/libstagefright/include/AACEncoder.h          |  6 +-
 4 files changed, 53 insertions(+), 27 deletions(-)

diff --git a/media/libmediaplayerservice/StagefrightRecorder.cpp b/media/libmediaplayerservice/StagefrightRecorder.cpp
index e56f253..5f8bfc6 100644
--- a/media/libmediaplayerservice/StagefrightRecorder.cpp
+++ b/media/libmediaplayerservice/StagefrightRecorder.cpp
@@ -1116,12 +1116,19 @@ status_t StagefrightRecorder::setupRTPRecording() {
         return BAD_VALUE;
     }
 
-    sp<MediaCodecSource> source;
 
     if (mAudioSource != AUDIO_SOURCE_CNT) {
+    sp<MediaCodecSource> source;
+
         source = createAudioSource();
         mAudioEncoderSource = source;
+
+    mWriter = new ARTPWriter(mOutputFd);
+    mWriter->addSource(source);
+    mWriter->setListener(mListener);
     } else {
+    sp<MediaSource> source;
+
         setDefaultVideoEncoderIfNecessary();
 
         sp<MediaSource> mediaSource;
@@ -1135,12 +1142,14 @@ status_t StagefrightRecorder::setupRTPRecording() {
             return err;
         }
         mVideoEncoderSource = source;
-    }
 
     mWriter = new ARTPWriter(mOutputFd);
     mWriter->addSource(source);
     mWriter->setListener(mListener);
 
+
+    }
+
     return OK;
 }
 
@@ -1175,7 +1184,7 @@ status_t StagefrightRecorder::setupMPEG2TSRecording() {
             return err;
         }
 
-        sp<MediaCodecSource> encoder;
+        sp<MediaSource> encoder;
         err = setupVideoEncoder(mediaSource, &encoder);
 
         if (err != OK) {
@@ -1584,7 +1593,7 @@ status_t StagefrightRecorder::setupCameraSource(
 
 status_t StagefrightRecorder::setupVideoEncoder(
         sp<MediaSource> cameraSource,
-        sp<MediaCodecSource> *source) {
+        sp<MediaSource> *source) {
     source->clear();
 
     sp<AMessage> format = new AMessage();
@@ -1785,7 +1794,7 @@ status_t StagefrightRecorder::setupMPEG4orWEBMRecording() {
             return err;
         }
 
-        sp<MediaCodecSource> encoder;
+        sp<MediaSource> encoder;
         err = setupVideoEncoder(mediaSource, &encoder);
         if (err != OK) {
             return err;
@@ -1894,17 +1903,28 @@ status_t StagefrightRecorder::resume() {
 
     int64_t bufferStartTimeUs = 0;
     bool allSourcesStarted = true;
-    for (const auto &source : { mAudioEncoderSource, mVideoEncoderSource }) {
-        if (source == nullptr) {
-            continue;
-        }
-        int64_t timeUs = source->getFirstSampleSystemTimeUs();
-        if (timeUs < 0) {
-            allSourcesStarted = false;
-        }
-        if (bufferStartTimeUs < timeUs) {
-            bufferStartTimeUs = timeUs;
-        }
+    int64_t timeUs;
+    {
+        if (mAudioEncoderSource != nullptr) {
+	        timeUs = mAudioEncoderSource->getFirstSampleSystemTimeUs();
+	        if (timeUs < 0) {
+	            allSourcesStarted = false;
+	        }
+	        if (bufferStartTimeUs < timeUs) {
+	            bufferStartTimeUs = timeUs;
+	        }
+	 }
+#if 0
+        if (mVideoEncoderSource != nullptr) {
+	        timeUs = mVideoEncoderSource->getFirstSampleSystemTimeUs();
+	        if (timeUs < 0) {
+	            allSourcesStarted = false;
+	        }
+	        if (bufferStartTimeUs < timeUs) {
+	            bufferStartTimeUs = timeUs;
+	        }
+	 }
+#endif
     }
 
     if (allSourcesStarted) {
@@ -1918,12 +1938,18 @@ status_t StagefrightRecorder::resume() {
     if (mCaptureFpsEnable) {
         timeOffset *= mCaptureFps / mFrameRate;
     }
-    for (const auto &source : { mAudioEncoderSource, mVideoEncoderSource }) {
-        if (source == nullptr) {
-            continue;
+
+    {
+        if (mAudioEncoderSource != nullptr) {
+            mAudioEncoderSource->setInputBufferTimeOffset((int64_t)timeOffset);
+            mAudioEncoderSource->start();
         }
-        source->setInputBufferTimeOffset((int64_t)timeOffset);
-        source->start();
+#if 0
+        if (mVideoEncoderSource != nullptr) {
+            mVideoEncoderSource->setInputBufferTimeOffset((int64_t)timeOffset);
+            mVideoEncoderSource->start();
+        }
+#endif
     }
     mPauseStartTimeUs = 0;
 
diff --git a/media/libmediaplayerservice/StagefrightRecorder.h b/media/libmediaplayerservice/StagefrightRecorder.h
index e41fbf9..0417dcb 100644
--- a/media/libmediaplayerservice/StagefrightRecorder.h
+++ b/media/libmediaplayerservice/StagefrightRecorder.h
@@ -137,7 +137,7 @@ protected:
     int64_t mPauseStartTimeUs;
     int64_t mTotalPausedDurationUs;
     sp<MediaCodecSource> mAudioEncoderSource;
-    sp<MediaCodecSource> mVideoEncoderSource;
+    sp<MediaSource> mVideoEncoderSource;
 
     bool mStarted;
     // Needed when GLFrames are encoded.
@@ -170,7 +170,7 @@ protected:
     status_t setupSurfaceMediaSource();
 
     status_t setupAudioEncoder(const sp<MediaWriter>& writer);
-    status_t setupVideoEncoder(sp<MediaSource> cameraSource, sp<MediaCodecSource> *source);
+    status_t setupVideoEncoder(sp<MediaSource> cameraSource, sp<MediaSource> *source);
     virtual void setupCustomVideoEncoderParams(sp<MediaSource> /*cameraSource*/,
             sp<AMessage> &/*format*/) {}
 
diff --git a/media/libstagefright/codecs/aacenc/AACEncoder.cpp b/media/libstagefright/codecs/aacenc/AACEncoder.cpp
index 9e596ff..bebb9dc 100644
--- a/media/libstagefright/codecs/aacenc/AACEncoder.cpp
+++ b/media/libstagefright/codecs/aacenc/AACEncoder.cpp
@@ -30,7 +30,7 @@
 
 namespace android {
 
-AACEncoder::AACEncoder(const sp<IMediaSource> &source, const sp<MetaData> &meta)
+AACEncoder::AACEncoder(const sp<MediaSource> &source, const sp<MetaData> &meta)
     : mSource(source),
       mMeta(meta),
       mStarted(false),
diff --git a/media/libstagefright/include/AACEncoder.h b/media/libstagefright/include/AACEncoder.h
index 462e905..52beb0e 100644
--- a/media/libstagefright/include/AACEncoder.h
+++ b/media/libstagefright/include/AACEncoder.h
@@ -27,9 +27,9 @@ namespace android {
 
 class MediaBufferGroup;
 
-class AACEncoder: public BnMediaSource {
+class AACEncoder: public MediaSource {
     public:
-        AACEncoder(const sp<IMediaSource> &source, const sp<MetaData> &meta);
+        AACEncoder(const sp<MediaSource> &source, const sp<MetaData> &meta);
 
         virtual status_t start(MetaData *params);
         virtual status_t stop();
@@ -42,7 +42,7 @@ class AACEncoder: public BnMediaSource {
         virtual ~AACEncoder();
 
     private:
-        sp<IMediaSource>   mSource;
+        sp<MediaSource>   mSource;
         sp<MetaData>      mMeta;
         bool              mStarted;
         MediaBufferGroup *mBufferGroup;
-- 
2.9.3

