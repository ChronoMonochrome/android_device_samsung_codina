From 4f1cfa7b1908ba9c097048bd783ef18d7d24dbf7 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Fri, 29 May 2015 23:53:51 +0300
Subject: [PATCH 2/2] Audio fixes

Change-Id: Ibcbfd365d0016f47bd07ccc61148435280fc063b
---
 services/audioflinger/PlaybackTracks.h             |  2 +-
 .../audiopolicy/AudioPolicyClientImplLegacy.cpp    | 16 ++-------
 .../audiopolicy/AudioPolicyInterfaceImplLegacy.cpp | 38 +---------------------
 3 files changed, 4 insertions(+), 52 deletions(-)

diff --git a/services/audioflinger/PlaybackTracks.h b/services/audioflinger/PlaybackTracks.h
index 9178a67..0930361 100644
--- a/services/audioflinger/PlaybackTracks.h
+++ b/services/audioflinger/PlaybackTracks.h
@@ -55,7 +55,7 @@ public:
             audio_stream_type_t streamType() const {
                 return mStreamType;
             }
-            bool        isOffloaded() const { return 0;} 
+            bool        isOffloaded() const { return 0; }
             bool        isDirect() const { return (mFlags & IAudioFlinger::TRACK_DIRECT) != 0; }
             status_t    setParameters(const String8& keyValuePairs);
             status_t    attachAuxEffect(int EffectId);
diff --git a/services/audiopolicy/AudioPolicyClientImplLegacy.cpp b/services/audiopolicy/AudioPolicyClientImplLegacy.cpp
index 86f1070..6ccde1b 100644
--- a/services/audiopolicy/AudioPolicyClientImplLegacy.cpp
+++ b/services/audiopolicy/AudioPolicyClientImplLegacy.cpp
@@ -85,9 +85,6 @@ static audio_io_handle_t open_output(audio_module_handle_t module,
     config.sample_rate = *pSamplingRate;
     config.format = *pFormat;
     config.channel_mask = *pChannelMask;
-    if (offloadInfo != NULL) {
-        config.offload_info = *offloadInfo;
-    }
     audio_io_handle_t output = AUDIO_IO_HANDLE_NONE;
     status_t status = af->openOutput(module, &output, &config, pDevices,
                                      String8(""), pLatencyMs, flags);
@@ -95,9 +92,6 @@ static audio_io_handle_t open_output(audio_module_handle_t module,
         *pSamplingRate = config.sample_rate;
         *pFormat = config.format;
         *pChannelMask = config.channel_mask;
-        if (offloadInfo != NULL) {
-            *((audio_offload_info_t *)offloadInfo) = config.offload_info;
-        }
     }
     return output;
 }
@@ -125,14 +119,8 @@ audio_io_handle_t aps_open_output_on_module(void *service __unused,
                                                    audio_output_flags_t flags,
                                                    const audio_offload_info_t *offloadInfo)
 {
-#ifdef HAVE_PRE_KITKAT_AUDIO_BLOB
-     return open_output(module, pDevices, pSamplingRate, pFormat, pChannelMask,
-                           pLatencyMs, flags, NULL);
-#else
-     return open_output(module, pDevices, pSamplingRate, pFormat, pChannelMask,
-                           pLatencyMs, flags, offloadInfo);
-#endif
-
+    return open_output(module, pDevices, pSamplingRate, pFormat, pChannelMask,
+                          pLatencyMs, flags, NULL);
 }
 
 audio_io_handle_t aps_open_dup_output(void *service __unused,
diff --git a/services/audiopolicy/AudioPolicyInterfaceImplLegacy.cpp b/services/audiopolicy/AudioPolicyInterfaceImplLegacy.cpp
index 3475c3d..8339022 100644
--- a/services/audiopolicy/AudioPolicyInterfaceImplLegacy.cpp
+++ b/services/audiopolicy/AudioPolicyInterfaceImplLegacy.cpp
@@ -475,14 +475,7 @@ bool AudioPolicyService::isStreamActive(audio_stream_type_t stream, uint32_t inP
 
 bool AudioPolicyService::isStreamActiveRemotely(audio_stream_type_t stream, uint32_t inPastMs) const
 {
-    if (uint32_t(stream) >= AUDIO_STREAM_CNT) {
-        return BAD_VALUE;
-    }
-    if (mpAudioPolicy == NULL) {
-        return false;
-    }
-    Mutex::Autolock _l(mLock);
-    return mpAudioPolicy->is_stream_active_remotely(mpAudioPolicy, stream, inPastMs);
+    return false;
 }
 
 bool AudioPolicyService::isSourceActive(audio_source_t source) const
@@ -501,41 +494,12 @@ status_t AudioPolicyService::queryDefaultPreProcessing(int audioSession,
                                                        effect_descriptor_t *descriptors,
                                                        uint32_t *count)
 {
-#ifdef HAVE_PRE_KITKAT_AUDIO_BLOB
     return false;
-#endif
-    if (mpAudioPolicy == NULL) {
-        *count = 0;
-        return NO_INIT;
-    }
-    sp<AudioPolicyEffects>audioPolicyEffects;
-    {
-        Mutex::Autolock _l(mLock);
-        audioPolicyEffects = mAudioPolicyEffects;
-    }
-    if (audioPolicyEffects == 0) {
-        *count = 0;
-        return NO_INIT;
-    }
-    return audioPolicyEffects->queryDefaultInputEffects(audioSession, descriptors, count);
 }
 
 bool AudioPolicyService::isOffloadSupported(const audio_offload_info_t& info)
 {
-#if HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
     return false;
-#endif
-    if (mpAudioPolicy == NULL) {
-        ALOGV("mpAudioPolicy == NULL");
-        return false;
-    }
-
-    if (mpAudioPolicy->is_offload_supported == NULL) {
-        ALOGV("HAL does not implement is_offload_supported");
-        return false;
-    }
-
-    return mpAudioPolicy->is_offload_supported(mpAudioPolicy, &info);
 }
 
 status_t AudioPolicyService::listAudioPorts(audio_port_role_t role __unused,
-- 
1.9.1

