From fa702984fb22dfb808f5eb9914fd7a74b89c7fd7 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 7 Mar 2016 05:18:13 +0700
Subject: [PATCH 24/54] 0034-EffectVisualizer-Fix-aliasing-violations.patch

Change-Id: Ib2b65b429d39529798d59e5beb3ff9f9f564c32a
---
 media/libeffects/visualizer/EffectVisualizer.cpp | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

diff --git a/media/libeffects/visualizer/EffectVisualizer.cpp b/media/libeffects/visualizer/EffectVisualizer.cpp
index 0c310c5..05ad533 100644
--- a/media/libeffects/visualizer/EffectVisualizer.cpp
+++ b/media/libeffects/visualizer/EffectVisualizer.cpp
@@ -478,22 +478,27 @@ int Visualizer_command(effect_handle_t self, uint32_t cmdCode, uint32_t cmdSize,
         }
         memcpy(pReplyData, pCmdData, sizeof(effect_param_t) + sizeof(uint32_t));
         effect_param_t *p = (effect_param_t *)pReplyData;
+        union {
+            char *data;
+            uint32_t *data32;
+        };
+        data = p->data;
         p->status = 0;
         *replySize = sizeof(effect_param_t) + sizeof(uint32_t);
         if (p->psize != sizeof(uint32_t)) {
             p->status = -EINVAL;
             break;
         }
-        switch (*(uint32_t *)p->data) {
+        switch (data32[0]) {
         case VISUALIZER_PARAM_CAPTURE_SIZE:
             ALOGV("get mCaptureSize = %" PRIu32, pContext->mCaptureSize);
-            *((uint32_t *)p->data + 1) = pContext->mCaptureSize;
+            data[1] = pContext->mCaptureSize;
             p->vsize = sizeof(uint32_t);
             *replySize += sizeof(uint32_t);
             break;
         case VISUALIZER_PARAM_SCALING_MODE:
             ALOGV("get mScalingMode = %" PRIu32, pContext->mScalingMode);
-            *((uint32_t *)p->data + 1) = pContext->mScalingMode;
+            data[1] = pContext->mScalingMode;
             p->vsize = sizeof(uint32_t);
             *replySize += sizeof(uint32_t);
             break;
@@ -515,21 +520,26 @@ int Visualizer_command(effect_handle_t self, uint32_t cmdCode, uint32_t cmdSize,
         }
         *(int32_t *)pReplyData = 0;
         effect_param_t *p = (effect_param_t *)pCmdData;
+        union {
+            char *data;
+            uint32_t *data32;
+        };
+        data = p->data;
         if (p->psize != sizeof(uint32_t) || p->vsize != sizeof(uint32_t)) {
             *(int32_t *)pReplyData = -EINVAL;
             break;
         }
-        switch (*(uint32_t *)p->data) {
+        switch (data32[0]) {
         case VISUALIZER_PARAM_CAPTURE_SIZE:
-            pContext->mCaptureSize = *((uint32_t *)p->data + 1);
+            pContext->mCaptureSize = data[1];
             ALOGV("set mCaptureSize = %" PRIu32, pContext->mCaptureSize);
             break;
         case VISUALIZER_PARAM_SCALING_MODE:
-            pContext->mScalingMode = *((uint32_t *)p->data + 1);
+            pContext->mScalingMode = data[1];
             ALOGV("set mScalingMode = %" PRIu32, pContext->mScalingMode);
             break;
         case VISUALIZER_PARAM_LATENCY:
-            pContext->mLatency = *((uint32_t *)p->data + 1);
+            pContext->mLatency = data[1];
             ALOGV("set mLatency = %" PRIu32, pContext->mLatency);
             break;
         case VISUALIZER_PARAM_MEASUREMENT_MODE:
-- 
2.5.0

