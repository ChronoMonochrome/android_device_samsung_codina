From c8cac4b30df6dd7c5a32d2c98559f44dbe59aac0 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Wed, 7 Oct 2015 01:54:52 +0300
Subject: [PATCH 2/7] STE_OMX_getSupportedProfileLevel_fix

Change-Id: Ib550e168211c43d783c8b8dd1a3b3f45d61efd60
---
 media/libstagefright/OMXClient.cpp | 22 +++++++++++++++++++++-
 1 file changed, 21 insertions(+), 1 deletion(-)

diff --git a/media/libstagefright/OMXClient.cpp b/media/libstagefright/OMXClient.cpp
index e69890d..37d982a 100644
--- a/media/libstagefright/OMXClient.cpp
+++ b/media/libstagefright/OMXClient.cpp
@@ -30,6 +30,10 @@
 #include <utils/KeyedVector.h>
 
 #include "include/OMX.h"
+#ifdef STE_HARDWARE
+#include <OMX_Video.h>
+#include <OMX_Index.h>
+#endif
 
 namespace android {
 
@@ -265,7 +269,23 @@ status_t MuxOMX::sendCommand(
 status_t MuxOMX::getParameter(
         node_id node, OMX_INDEXTYPE index,
         void *params, size_t size) {
-    return getOMX(node)->getParameter(node, index, params, size);
+#ifdef STE_HARDWARE
+	/* Meticulus:
+	 * If we call into our STE omx blobs with an unsupported profile index
+	 * The blob freaks out and dies causing errors later. If we stop the call
+	 * and just return an error here, VFM doesn't freak out and the caller
+	 * can try a working profile. i.e. YouTube v5.10.1.5 (9/19/2014) and up.
+	 */
+	if(index == OMX_IndexParamVideoProfileLevelQuerySupported){
+		OMX_VIDEO_PARAM_PROFILELEVELTYPE *pt = (OMX_VIDEO_PARAM_PROFILELEVELTYPE *)params;
+		ALOGI("Meticulus: eProfile=%lu eLevel=%lu nProfileIndex=%lu\n",pt->eProfile, pt->eLevel, pt->nProfileIndex);
+		if(pt->nProfileIndex == 0){
+			return -1;
+		}
+		
+	}
+#endif
+    	return getOMX(node)->getParameter(node, index, params, size);
 }
 
 status_t MuxOMX::setParameter(
-- 
1.9.1

