From e89629aefc4e4d41e2a09e52de81d54bd4b05fe9 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH 47/57] audio flinger: Fix native crash during underruns for
 patch track

When audio flinger removes an AudioTrack from the active list
in case of underrun, framecount gets reset to 0 in audio track
client during obtain buffer.
Server side patch track uses same frame count(0) to invoke obtain
buffer during retry post restart and it lead to crash.

Keep a copy of buffer frame count in patch track obtain buffer
and use it during retry.
---
 services/audioflinger/Tracks.cpp | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/services/audioflinger/Tracks.cpp b/services/audioflinger/Tracks.cpp
index 0f25153a5..e53397db9 100644
--- a/services/audioflinger/Tracks.cpp
+++ b/services/audioflinger/Tracks.cpp
@@ -1521,9 +1521,11 @@ status_t AudioFlinger::PlaybackThread::PatchTrack::obtainBuffer(Proxy::Buffer* b
     status_t status = NO_ERROR;
     static const int32_t kMaxTries = 5;
     int32_t tryCounter = kMaxTries;
+    size_t  frameCount = buffer->mFrameCount;
     do {
         if (status == NOT_ENOUGH_DATA) {
             restartIfDisabled();
+            buffer->mFrameCount = frameCount;
         }
         status = mProxy->obtainBuffer(buffer, timeOut);
     } while ((status == NOT_ENOUGH_DATA) && (tryCounter-- > 0));
-- 
2.11.0

