From 052729f40ba29e7d3d3fca8286280e9988725026 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 28 Jan 2016 12:17:07 +0700
Subject: [PATCH 41/58] Revert "NuPlayer: add pause timeout event for offload
 audio."

This reverts commit f5b1db11734358d979a23a1ac4903872186ef60b.
---
 .../nuplayer/NuPlayerRenderer.cpp                  | 40 +---------------------
 .../nuplayer/NuPlayerRenderer.h                    |  7 ----
 2 files changed, 1 insertion(+), 46 deletions(-)

diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
index 73ac057..a8c8818 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp
@@ -32,10 +32,6 @@
 
 namespace android {
 
-// Maximum time in paused state when offloading audio decompression. When elapsed, the AudioSink
-// is closed to allow the audio DSP to power down.
-static const int64_t kOffloadPauseMaxUs = 60000000ll;
-
 // static
 const int64_t NuPlayer::Renderer::kMinPositionUpdateDelayUs = 100000ll;
 
@@ -65,9 +61,7 @@ NuPlayer::Renderer::Renderer(
       mVideoRenderingStartGeneration(0),
       mAudioRenderingStartGeneration(0),
       mLastPositionUpdateUs(-1ll),
-      mVideoLateByUs(0ll),
-      mAudioOffloadPauseTimeoutGeneration(0),
-      mAudioOffloadTornDown(false) {
+      mVideoLateByUs(0ll) {
 }
 
 NuPlayer::Renderer::~Renderer() {
@@ -265,17 +259,6 @@ void NuPlayer::Renderer::onMessageReceived(const sp<AMessage> &msg) {
             break;
         }
 
-        case kWhatAudioOffloadPauseTimeout:
-        {
-            int32_t generation;
-            CHECK(msg->findInt32("generation", &generation));
-            if (generation != mAudioOffloadPauseTimeoutGeneration) {
-                break;
-            }
-            onAudioOffloadTearDown();
-            break;
-        }
-
         default:
             TRESPASS();
             break;
@@ -968,7 +951,6 @@ void NuPlayer::Renderer::onPause() {
 
     if (mHasAudio) {
         mAudioSink->pause();
-        startAudioOffloadPauseTimeout();
     }
 
     ALOGV("now paused audio queue has %d entries, video has %d entries",
@@ -981,7 +963,6 @@ void NuPlayer::Renderer::onResume() {
     }
 
     if (mHasAudio) {
-        cancelAudioOffloadPauseTimeout();
         mAudioSink->start();
     }
 
@@ -1070,11 +1051,6 @@ int64_t NuPlayer::Renderer::getPlayedOutAudioDurationUs(int64_t nowUs) {
 }
 
 void NuPlayer::Renderer::onAudioOffloadTearDown() {
-    if (mAudioOffloadTornDown) {
-        return;
-    }
-    mAudioOffloadTornDown = true;
-
     int64_t firstAudioTimeUs;
     {
         Mutex::Autolock autoLock(mLock);
@@ -1093,19 +1069,5 @@ void NuPlayer::Renderer::onAudioOffloadTearDown() {
     notify->post();
 }
 
-void NuPlayer::Renderer::startAudioOffloadPauseTimeout() {
-    if (offloadingAudio()) {
-        sp<AMessage> msg = new AMessage(kWhatAudioOffloadPauseTimeout, id());
-        msg->setInt32("generation", mAudioOffloadPauseTimeoutGeneration);
-        msg->post(kOffloadPauseMaxUs);
-    }
-}
-
-void NuPlayer::Renderer::cancelAudioOffloadPauseTimeout() {
-    if (offloadingAudio()) {
-        ++mAudioOffloadPauseTimeoutGeneration;
-    }
-}
-
 }  // namespace android
 
diff --git a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
index 8e6112b..e28071f 100644
--- a/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
+++ b/media/libmediaplayerservice/nuplayer/NuPlayerRenderer.h
@@ -66,7 +66,6 @@ struct NuPlayer::Renderer : public AHandler {
         kWhatVideoRenderingStart = 'vdrd',
         kWhatMediaRenderingStart = 'mdrd',
         kWhatAudioOffloadTearDown = 'aOTD',
-        kWhatAudioOffloadPauseTimeout = 'aOPT',
     };
 
 protected:
@@ -133,9 +132,6 @@ private:
     int64_t mLastPositionUpdateUs;
     int64_t mVideoLateByUs;
 
-    int32_t mAudioOffloadPauseTimeoutGeneration;
-    bool mAudioOffloadTornDown;
-
     size_t fillAudioBuffer(void *buffer, size_t size);
 
     bool onDrainAudioQueue();
@@ -172,9 +168,6 @@ private:
 
     bool offloadingAudio() const { return (mFlags & FLAG_OFFLOAD_AUDIO) != 0; }
 
-    void startAudioOffloadPauseTimeout();
-    void cancelAudioOffloadPauseTimeout();
-
     DISALLOW_EVIL_CONSTRUCTORS(Renderer);
 };
 
-- 
2.5.0

