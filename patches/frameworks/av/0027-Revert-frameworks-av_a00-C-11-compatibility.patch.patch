From d72c5f951352d4f690c97ec1000bc581d9e9f685 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 7 Mar 2016 21:49:00 +0700
Subject: [PATCH 27/54] Revert "frameworks-av_a00-C++11-compatibility.patch"

This reverts commit 11a2dfc3a1696bea0bd5b9c9b9be37a1d581590f.

Change-Id: I42502ac1a9154e6e3ed09684a79a8f7b7937be5a
---
 cmds/stagefright/SineSource.h                                |  3 +--
 include/media/ToneGenerator.h                                |  7 +++----
 media/libstagefright/OMXCodec.cpp                            |  8 ++++----
 media/libstagefright/id3/Android.mk                          |  2 +-
 media/mediaserver/Android.mk                                 |  1 -
 services/audioflinger/Android.mk                             |  3 ---
 services/audioflinger/AudioMixer.cpp                         |  2 +-
 services/audioflinger/AudioMixer.h                           | 10 ++++------
 services/audioflinger/AudioResampler.h                       |  4 +---
 services/audioflinger/AudioResamplerFirGen.h                 | 12 +++++-------
 services/audioflinger/StateQueue.cpp                         |  2 +-
 services/camera/libcameraservice/Android.mk                  |  2 +-
 services/camera/libcameraservice/api1/client2/Parameters.h   |  6 ++----
 .../libcameraservice/device1/CameraHardwareInterface.h       |  2 +-
 14 files changed, 25 insertions(+), 39 deletions(-)

diff --git a/cmds/stagefright/SineSource.h b/cmds/stagefright/SineSource.h
index 234e880..76ab669 100644
--- a/cmds/stagefright/SineSource.h
+++ b/cmds/stagefright/SineSource.h
@@ -3,7 +3,6 @@
 #define SINE_SOURCE_H_
 
 #include <media/stagefright/MediaSource.h>
-#include <utils/Compat.h>
 
 namespace android {
 
@@ -25,7 +24,7 @@ protected:
 
 private:
     enum { kBufferSize = 8192 };
-    static const CONSTEXPR double kFrequency = 500.0;
+    static const double kFrequency = 500.0;
 
     bool mStarted;
     int32_t mSampleRate;
diff --git a/include/media/ToneGenerator.h b/include/media/ToneGenerator.h
index d815ca1..04a71fc 100644
--- a/include/media/ToneGenerator.h
+++ b/include/media/ToneGenerator.h
@@ -17,12 +17,11 @@
 #ifndef ANDROID_TONEGENERATOR_H_
 #define ANDROID_TONEGENERATOR_H_
 
-#include <media/AudioSystem.h>
-#include <media/AudioTrack.h>
-#include <utils/Compat.h>
-#include <utils/KeyedVector.h>
 #include <utils/RefBase.h>
+#include <utils/KeyedVector.h>
 #include <utils/threads.h>
+#include <media/AudioSystem.h>
+#include <media/AudioTrack.h>
 
 #if __cplusplus < 201103L && !defined(__GXX_EXPERIMENTAL_CXX0X__) && !defined(constexpr)
 #define constexpr const
diff --git a/media/libstagefright/OMXCodec.cpp b/media/libstagefright/OMXCodec.cpp
index d54298b..0e38123 100644
--- a/media/libstagefright/OMXCodec.cpp
+++ b/media/libstagefright/OMXCodec.cpp
@@ -219,10 +219,10 @@ static sp<MediaSource> InstantiateSoftwareDecoder(
 #undef FACTORY_CREATE_ENCODER
 #undef FACTORY_REF
 
-#define CODEC_LOGI(x, ...) ALOGI("[%s] " x, mComponentName, ##__VA_ARGS__)
-#define CODEC_LOGV(x, ...) ALOGV("[%s] " x, mComponentName, ##__VA_ARGS__)
-#define CODEC_LOGW(x, ...) ALOGW("[%s] " x, mComponentName, ##__VA_ARGS__)
-#define CODEC_LOGE(x, ...) ALOGE("[%s] " x, mComponentName, ##__VA_ARGS__)
+#define CODEC_LOGI(x, ...) ALOGI("[%s] "x, mComponentName, ##__VA_ARGS__)
+#define CODEC_LOGV(x, ...) ALOGV("[%s] "x, mComponentName, ##__VA_ARGS__)
+#define CODEC_LOGW(x, ...) ALOGW("[%s] "x, mComponentName, ##__VA_ARGS__)
+#define CODEC_LOGE(x, ...) ALOGE("[%s] "x, mComponentName, ##__VA_ARGS__)
 
 struct OMXCodecObserver : public BnOMXObserver {
     OMXCodecObserver() {
diff --git a/media/libstagefright/id3/Android.mk b/media/libstagefright/id3/Android.mk
index b72a19e..2194c38 100644
--- a/media/libstagefright/id3/Android.mk
+++ b/media/libstagefright/id3/Android.mk
@@ -4,7 +4,7 @@ include $(CLEAR_VARS)
 LOCAL_SRC_FILES := \
 	ID3.cpp
 
-LOCAL_CFLAGS += -Werror -Os
+LOCAL_CFLAGS += -Werror
 
 LOCAL_MODULE := libstagefright_id3
 
diff --git a/media/mediaserver/Android.mk b/media/mediaserver/Android.mk
index 919f5c7..732e77f 100644
--- a/media/mediaserver/Android.mk
+++ b/media/mediaserver/Android.mk
@@ -52,6 +52,5 @@ endif
 
 LOCAL_MODULE:= mediaserver
 LOCAL_32_BIT_ONLY := true
-LOCAL_CFLAGS += -std=gnu++11
 
 include $(BUILD_EXECUTABLE)
diff --git a/services/audioflinger/Android.mk b/services/audioflinger/Android.mk
index 9fa5273..4eb13a3 100644
--- a/services/audioflinger/Android.mk
+++ b/services/audioflinger/Android.mk
@@ -93,8 +93,6 @@ endif
 endif
 #QTI Resampler
 
-LOCAL_CFLAGS += -Os -std=gnu++11
-
 LOCAL_MODULE:= libaudioflinger
 LOCAL_32_BIT_ONLY := true
 
@@ -197,7 +195,6 @@ endif
 #QTI Resampler
 
 LOCAL_MODULE := libaudioresampler
-LOCAL_CFLAGS += -std=gnu++11
 
 include $(BUILD_SHARED_LIBRARY)
 
diff --git a/services/audioflinger/AudioMixer.cpp b/services/audioflinger/AudioMixer.cpp
index a34c1e0..db89698 100644
--- a/services/audioflinger/AudioMixer.cpp
+++ b/services/audioflinger/AudioMixer.cpp
@@ -1910,7 +1910,7 @@ int64_t AudioMixer::calculateOutputPTS(const track_t& t, int64_t basePTS,
  * Perhaps just stick with a single for loop.
  */
 
-// Needs to derive a compile time constant (CONSTEXPR).  Could be targeted to go
+// Needs to derive a compile time constant (constexpr).  Could be targeted to go
 // to a MONOVOL mixtype based on MAX_NUM_VOLUMES, but that's an unnecessary complication.
 #define MIXTYPE_MONOVOL(mixtype) (mixtype == MIXTYPE_MULTI ? MIXTYPE_MULTI_MONOVOL : \
         mixtype == MIXTYPE_MULTI_SAVEONLY ? MIXTYPE_MULTI_SAVEONLY_MONOVOL : mixtype)
diff --git a/services/audioflinger/AudioMixer.h b/services/audioflinger/AudioMixer.h
index 23725e9..1fa6846 100644
--- a/services/audioflinger/AudioMixer.h
+++ b/services/audioflinger/AudioMixer.h
@@ -21,19 +21,17 @@
 #include <stdint.h>
 #include <sys/types.h>
 
-#include <hardware/audio_effect.h>
-#include <media/AudioBufferProvider.h>
-#include <media/nbaio/NBLog.h>
-#include <system/audio.h>
-#include <utils/Compat.h>
 #include <utils/threads.h>
 
 #include <media/AudioBufferProvider.h>
 #include "AudioResampler.h"
 
+#include <hardware/audio_effect.h>
 #ifdef HW_ACC_EFFECTS
 #include "EffectsHwAcc.h"
 #endif
+#include <system/audio.h>
+#include <media/nbaio/NBLog.h>
 
 // FIXME This is actually unity gain, which might not be max in future, expressed in U.12
 #define MAX_GAIN_INT AudioMixer::UNITY_GAIN_INT
@@ -63,7 +61,7 @@ public:
     static const uint32_t MAX_NUM_CHANNELS_TO_DOWNMIX = AUDIO_CHANNEL_COUNT_MAX;
 
     static const uint16_t UNITY_GAIN_INT = 0x1000;
-    static const CONSTEXPR float UNITY_GAIN_FLOAT = 1.0f;
+    static const float    UNITY_GAIN_FLOAT = 1.0f;
 
     enum { // names
 
diff --git a/services/audioflinger/AudioResampler.h b/services/audioflinger/AudioResampler.h
index befaad7..54130c4 100644
--- a/services/audioflinger/AudioResampler.h
+++ b/services/audioflinger/AudioResampler.h
@@ -19,9 +19,7 @@
 
 #include <stdint.h>
 #include <sys/types.h>
-
 #include <cutils/compiler.h>
-#include <utils/Compat.h>
 
 #include <media/AudioBufferProvider.h>
 #include <system/audio.h>
@@ -52,7 +50,7 @@ public:
 #endif
     };
 
-    static const CONSTEXPR float UNITY_GAIN_FLOAT = 1.0f;
+    static const float UNITY_GAIN_FLOAT = 1.0f;
 
     static AudioResampler* create(audio_format_t format, int inChannelCount,
             int32_t sampleRate, src_quality quality=DEFAULT_QUALITY);
diff --git a/services/audioflinger/AudioResamplerFirGen.h b/services/audioflinger/AudioResamplerFirGen.h
index 369536e..d024b2f 100644
--- a/services/audioflinger/AudioResamplerFirGen.h
+++ b/services/audioflinger/AudioResamplerFirGen.h
@@ -17,8 +17,6 @@
 #ifndef ANDROID_AUDIO_RESAMPLER_FIR_GEN_H
 #define ANDROID_AUDIO_RESAMPLER_FIR_GEN_H
 
-#include "utils/Compat.h"
-
 namespace android {
 
 /*
@@ -180,7 +178,7 @@ static inline int64_t toint(double x, int64_t maxval) {
  * I0ATerm<> to the precision of the compiler.  The series can be expanded
  * to any precision needed, but currently set around 24b precision.
  *
- * We use a bit of template math here, CONSTEXPR would probably be
+ * We use a bit of template math here, constexpr would probably be
  * more appropriate for a C++11 compiler.
  *
  * For the intermediate range 3.75 < x < 15, we use minimax polynomial fit.
@@ -189,22 +187,22 @@ static inline int64_t toint(double x, int64_t maxval) {
 
 template <int N>
 struct I0Term {
-    static const CONSTEXPR double value = I0Term<N-1>::value / (4. * N * N);
+    static const double value = I0Term<N-1>::value / (4. * N * N);
 };
 
 template <>
 struct I0Term<0> {
-    static const CONSTEXPR double value = 1.;
+    static const double value = 1.;
 };
 
 template <int N>
 struct I0ATerm {
-    static const CONSTEXPR double value = I0ATerm<N-1>::value * (2.*N-1.) * (2.*N-1.) / (8. * N);
+    static const double value = I0ATerm<N-1>::value * (2.*N-1.) * (2.*N-1.) / (8. * N);
 };
 
 template <>
 struct I0ATerm<0> { // 1/sqrt(2*PI);
-    static const CONSTEXPR double value = 0.398942280401432677939946059934381868475858631164934657665925;
+    static const double value = 0.398942280401432677939946059934381868475858631164934657665925;
 };
 
 #if USE_HORNERS_METHOD
diff --git a/services/audioflinger/StateQueue.cpp b/services/audioflinger/StateQueue.cpp
index 9d4188f..40d7bcd 100644
--- a/services/audioflinger/StateQueue.cpp
+++ b/services/audioflinger/StateQueue.cpp
@@ -48,7 +48,7 @@ template<typename T> StateQueue<T>::StateQueue() :
     , mObserverDump(&mObserverDummyDump), mMutatorDump(&mMutatorDummyDump)
 #endif
 {
-    atomic_init(&mNext, static_cast<uintptr_t>(0));
+    atomic_init(&mNext, 0);
 }
 
 template<typename T> StateQueue<T>::~StateQueue()
diff --git a/services/camera/libcameraservice/Android.mk b/services/camera/libcameraservice/Android.mk
index ad4de86..b17be82 100644
--- a/services/camera/libcameraservice/Android.mk
+++ b/services/camera/libcameraservice/Android.mk
@@ -73,7 +73,7 @@ LOCAL_C_INCLUDES += \
     external/jpeg
 
 
-LOCAL_CFLAGS += -Wall -Wextra -std=gnu++11
+LOCAL_CFLAGS += -Wall -Wextra
 
 ifeq ($(BOARD_NEEDS_MEMORYHEAPION),true)
     LOCAL_CFLAGS += -DUSE_MEMORY_HEAP_ION
diff --git a/services/camera/libcameraservice/api1/client2/Parameters.h b/services/camera/libcameraservice/api1/client2/Parameters.h
index e628a7e..7e5be84 100644
--- a/services/camera/libcameraservice/api1/client2/Parameters.h
+++ b/services/camera/libcameraservice/api1/client2/Parameters.h
@@ -19,13 +19,11 @@
 
 #include <system/graphics.h>
 
-#include <utils/Compat.h>
 #include <utils/Errors.h>
-#include <utils/KeyedVector.h>
 #include <utils/Mutex.h>
 #include <utils/String8.h>
 #include <utils/Vector.h>
-
+#include <utils/KeyedVector.h>
 #include <camera/CameraParameters.h>
 #include <camera/CameraParameters2.h>
 #include <camera/CameraMetadata.h>
@@ -189,7 +187,7 @@ struct Parameters {
     static const int MAX_INITIAL_PREVIEW_WIDTH = 1920;
     static const int MAX_INITIAL_PREVIEW_HEIGHT = 1080;
     // Aspect ratio tolerance
-    static const CONSTEXPR float ASPECT_RATIO_TOLERANCE = 0.001;
+    static const float ASPECT_RATIO_TOLERANCE = 0.001;
 
     // Full static camera info, object owned by someone else, such as
     // Camera2Device.
diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.h b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
index 906976a..e5b3648 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.h
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.h
@@ -615,7 +615,7 @@ private:
 
 #ifndef container_of
 #define container_of(ptr, type, member) ({                      \
-        const __typeof__(((type *) 0)->member) *__mptr = (ptr);     \
+        const typeof(((type *) 0)->member) *__mptr = (ptr);     \
         (type *) ((char *) __mptr - (char *)(&((type *)0)->member)); })
 #endif
 
-- 
2.5.0

