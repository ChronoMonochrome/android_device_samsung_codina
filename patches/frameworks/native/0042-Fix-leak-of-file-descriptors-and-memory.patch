From 337ad1fc4b6a646f1953b53e190bc81b7f515953 Mon Sep 17 00:00:00 2001
From: Wan Zhou <wanz@nvidia.com>
Date: Sat, 4 Feb 2017 14:59:47 +0800
Subject: [PATCH 42/44] Fix leak of file descriptors and memory.

 1. fds must be explicitly closed if it is not retained by Flattenable::unflatten().
 2. must delete allocated handle before setting to NULL.
---
 libs/binder/include/binder/Parcel.h | 8 +++++++-
 libs/ui/GraphicBuffer.cpp           | 1 +
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/libs/binder/include/binder/Parcel.h b/libs/binder/include/binder/Parcel.h
index b6c80facb..c77ce8661 100644
--- a/libs/binder/include/binder/Parcel.h
+++ b/libs/binder/include/binder/Parcel.h
@@ -553,7 +553,13 @@ private:
         }
         virtual status_t unflatten(void const* buffer, size_t size, int const* fds, size_t count) {
 #ifdef STE_HARDWARE
-            return const_cast<Flattenable&>(val).unflatten(buffer, size, fds, count);
+            status_t err = const_cast<Flattenable&>(val).unflatten(buffer, size, fds, count);
+            if (err != NO_ERROR) {
+                for (size_t i = 0; i < count; i++) {
+                    close(fds[i]);
+                }
+            }
+            return err;
 #else
             return const_cast<Flattenable<T>&>(val).unflatten(buffer, size, fds, count);
 #endif
diff --git a/libs/ui/GraphicBuffer.cpp b/libs/ui/GraphicBuffer.cpp
index 01d2bb195..759c41e09 100644
--- a/libs/ui/GraphicBuffer.cpp
+++ b/libs/ui/GraphicBuffer.cpp
@@ -479,6 +479,7 @@ status_t GraphicBuffer::unflatten(
         status_t err = mBufferMapper.importBuffer(handle);
         if (err != NO_ERROR) {
             width = height = stride = format = layerCount = usage = 0;
+            native_handle_delete(const_cast<native_handle*>(handle));
             handle = NULL;
             ALOGE("unflatten: registerBuffer failed: %s (%d)",
                     strerror(-err), err);
-- 
2.11.0

