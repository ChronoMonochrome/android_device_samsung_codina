From fb3debc50b35bf9b0fe5cbfbb0cd55a2f3470125 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 26 Dec 2016 19:45:43 +0700
Subject: [PATCH 22/26] frameworks-native_WW12-use-realtime-scheduling.patch

---
 services/inputflinger/InputManager.cpp          | 6 ++----
 services/surfaceflinger/SurfaceFlinger.cpp      | 2 +-
 services/surfaceflinger/SurfaceFlinger_hwc1.cpp | 2 +-
 services/surfaceflinger/main_surfaceflinger.cpp | 4 +---
 4 files changed, 5 insertions(+), 9 deletions(-)

diff --git a/services/inputflinger/InputManager.cpp b/services/inputflinger/InputManager.cpp
index 2ef25f3..3eabed3 100644
--- a/services/inputflinger/InputManager.cpp
+++ b/services/inputflinger/InputManager.cpp
@@ -52,15 +52,13 @@ void InputManager::initialize() {
 }
 
 status_t InputManager::start() {
-    status_t result = mDispatcherThread->run("InputDispatcher",
-            PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
+    status_t result = mDispatcherThread->run("InputDispatcher", PRIORITY_REALTIME);
     if (result) {
         ALOGE("Could not start InputDispatcher thread due to error %d.", result);
         return result;
     }
 
-    result = mReaderThread->run("InputReader",
-            PRIORITY_URGENT_DISPLAY + PRIORITY_MORE_FAVORABLE);
+    result = mReaderThread->run("InputReader", PRIORITY_REALTIME);
     if (result) {
         ALOGE("Could not start InputReader thread due to error %d.", result);
 
diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index 965f1f6..ccc147d 100644
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -520,7 +520,7 @@ void SurfaceFlinger::init() {
     getDefaultDisplayDevice()->makeCurrent(mEGLDisplay, mEGLContext);
 
     mEventControlThread = new EventControlThread(this);
-    mEventControlThread->run("EventControl", PRIORITY_URGENT_DISPLAY);
+    mEventControlThread->run("EventControl", PRIORITY_REALTIME);
     android_set_rt_ioprio(mEventControlThread->getTid(), 1);
 
     // initialize our drawing state
diff --git a/services/surfaceflinger/SurfaceFlinger_hwc1.cpp b/services/surfaceflinger/SurfaceFlinger_hwc1.cpp
index bbbcf0a..effa1aa 100644
--- a/services/surfaceflinger/SurfaceFlinger_hwc1.cpp
+++ b/services/surfaceflinger/SurfaceFlinger_hwc1.cpp
@@ -561,7 +561,7 @@ void SurfaceFlinger::init() {
     getDefaultDisplayDevice()->makeCurrent(mEGLDisplay, mEGLContext);
 
     mEventControlThread = new EventControlThread(this);
-    mEventControlThread->run("EventControl", PRIORITY_URGENT_DISPLAY);
+    mEventControlThread->run("EventControl", PRIORITY_REALTIME);
     android_set_rt_ioprio(mEventControlThread->getTid(), 1);
 
     // set a fake vsync period if there is no HWComposer
diff --git a/services/surfaceflinger/main_surfaceflinger.cpp b/services/surfaceflinger/main_surfaceflinger.cpp
index a13b53a..a303375 100644
--- a/services/surfaceflinger/main_surfaceflinger.cpp
+++ b/services/surfaceflinger/main_surfaceflinger.cpp
@@ -42,9 +42,7 @@ int main(int, char**) {
     // instantiate surfaceflinger
     sp<SurfaceFlinger> flinger = DisplayUtils::getInstance()->getSFInstance();
 
-    setpriority(PRIO_PROCESS, 0, PRIORITY_URGENT_DISPLAY);
-
-    set_sched_policy(0, SP_FOREGROUND);
+    setpriority(PRIO_PROCESS, 0, PRIORITY_REALTIME);
 
 #ifdef ENABLE_CPUSETS
     // Put most SurfaceFlinger threads in the system-background cpuset
-- 
2.9.3

