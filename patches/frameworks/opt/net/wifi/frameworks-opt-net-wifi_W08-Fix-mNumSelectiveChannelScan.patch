 wifi: Increase mNumSelectiveChannelScan when selective scan triggered

As mNumSelectiveChannelScan only increased when start scan succeed, in
some specific case, freqs in selective scan are not supported by kernel
due to Reg Domain, which makes scan always failed. This makes framework
continuously issue selective scans but get rejected.
Increase mNumSelectiveChannelScan when selective scan triggered, which
allow framework to issue full scan after several rounds of selective
scans.

diff --git a/service/java/com/android/server/wifi/WifiStateMachine.java b/service/java/com/android/server/wifi/WifiStateMachine.java
index 5b285f5..b0ea784 100644
--- a/service/java/com/android/server/wifi/WifiStateMachine.java
+++ b/service/java/com/android/server/wifi/WifiStateMachine.java
@@ -1720,6 +1720,7 @@ private void handleScanRequest(Message message) {
         freqs = new HashSet<Integer>();
         if (mNumSelectiveChannelScan <  mMaxInitialSavedChannelScan) {
            freqs = mWifiConfigManager.getConfiguredChannelList();
+           mNumSelectiveChannelScan++;
         }
         if (freqs != null && (freqs.size() == 0)) {
             freqs = null;
@@ -1814,12 +1815,6 @@ private boolean startScanNative(final Set<Integer> freqs, Set<Integer> hiddenNet
         WifiScanner.ScanListener nativeScanListener = new WifiScanner.ScanListener() {
                 // ignore all events since WifiStateMachine is registered for the supplicant events
                 public void onSuccess() {
-                    /* As part of optimizing time for initial scans for
-                     * saved profiles, increment the  scan trigger count
-                     * upon receiving a success.
-                     */
-                    if (mNumSelectiveChannelScan < mMaxInitialSavedChannelScan)
-                        mNumSelectiveChannelScan++;
                 }
                 public void onFailure(int reason, String description) {
                     mIsScanOngoing = false;
