From 04ee5a72f0ac1f22ea00c9e05848b9c30e02d163 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH 180/296] services: Fix starting window not removing issue

Since the Starting window is added in android.anim thread with async call,
so it may added after the first frame drawn. then it have no change to remove

Solution: add more check when creating the starting window, if first frame is drawned,
abort the starting window
---
 .../java/com/android/server/wm/AppWindowContainerController.java  | 8 ++++++--
 services/core/java/com/android/server/wm/AppWindowToken.java      | 3 +++
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/wm/AppWindowContainerController.java b/services/core/java/com/android/server/wm/AppWindowContainerController.java
index 8b954835782..171c6b6298f 100644
--- a/services/core/java/com/android/server/wm/AppWindowContainerController.java
+++ b/services/core/java/com/android/server/wm/AppWindowContainerController.java
@@ -151,13 +151,16 @@ public class AppWindowContainerController
             synchronized(mWindowMap) {
                 // If the window was successfully added, then
                 // we need to remove it.
-                if (container.removed || container.startingData == null) {
+                if (container.removed || container.startingData == null ||
+                        container.startingShouldRemoved) {
                     if (DEBUG_STARTING_WINDOW) Slog.v(TAG_WM,
                             "Aborted starting " + container
                                     + ": removed=" + container.removed
-                                    + " startingData=" + container.startingData);
+                                    + " startingData=" + container.startingData
+                                    + " startingShouldRemoved=" + container.startingShouldRemoved);
                     container.startingWindow = null;
                     container.startingData = null;
+                    container.startingShouldRemoved = false;
                     abort = true;
                 } else {
                     container.startingSurface = surface;
@@ -631,6 +634,7 @@ public class AppWindowContainerController
                 mContainer.startingSurface = null;
                 mContainer.startingWindow = null;
                 mContainer.startingDisplayed = false;
+                mContainer.startingShouldRemoved = false;
                 if (surface == null) {
                     if (DEBUG_STARTING_WINDOW) {
                         Slog.v(TAG_WM, "startingWindow was set but startingSurface==null, couldn't "
diff --git a/services/core/java/com/android/server/wm/AppWindowToken.java b/services/core/java/com/android/server/wm/AppWindowToken.java
index 7b240c21a3a..3f797344338 100644
--- a/services/core/java/com/android/server/wm/AppWindowToken.java
+++ b/services/core/java/com/android/server/wm/AppWindowToken.java
@@ -155,6 +155,7 @@ class AppWindowToken extends WindowToken implements WindowManagerService.AppFree
     StartingSurface startingSurface;
     boolean startingDisplayed;
     boolean startingMoved;
+    boolean startingShouldRemoved;
     // True if the hidden state of this token was forced to false due to a transferred starting
     // window.
     private boolean mHiddenSetFromTransferredStartingWindow;
@@ -269,6 +270,8 @@ class AppWindowToken extends WindowToken implements WindowManagerService.AppFree
             if (getController() != null) {
                 getController().removeStartingWindow();
             }
+        } else {
+            startingShouldRemoved = true;
         }
         updateReportedVisibilityLocked();
     }
-- 
2.11.0

