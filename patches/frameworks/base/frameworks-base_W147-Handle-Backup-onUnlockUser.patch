From a0943bd277ed9b5ecaf1c7c1ace7590b1b6da37d Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH] Handle Backup onUnlockUser on fg thread

BackupManagerServicec.onUnlockUser can block ActivityManager thread
for 300+ ms. It's safe to running anynchronous.

Test: Enable backup/rebooted the device and unlocked
Test: Create/Switch to guset user + enable backup

diff --git a/services/backup/java/com/android/server/backup/BackupManagerService.java b/services/backup/java/com/android/server/backup/BackupManagerService.java
index 0dd518141cf6..b6fd07299311 100644
--- a/services/backup/java/com/android/server/backup/BackupManagerService.java
+++ b/services/backup/java/com/android/server/backup/BackupManagerService.java
@@ -123,6 +123,7 @@
 import com.android.internal.util.DumpUtils;
 import com.android.server.AppWidgetBackupBridge;
 import com.android.server.EventLogTags;
+import com.android.server.FgThread;
 import com.android.server.SystemConfig;
 import com.android.server.SystemService;
 import com.android.server.backup.PackageManagerBackupAgent.Metadata;
@@ -398,7 +399,12 @@ public void onStart() {
 
         @Override
         public void onUnlockUser(int userId) {
+            FgThread.getHandler().post(() -> onUserUnlocked(userId));
+        }
+
+        private void onUserUnlocked(int userId) {
             if (userId == UserHandle.USER_SYSTEM) {
+                final long start = SystemClock.elapsedRealtime();
                 Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, "backup init");
                 sInstance.initialize(userId);
                 Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);
@@ -434,6 +440,8 @@ public void onUnlockUser(int userId) {
                     // can't happen; it's a local object
                 }
                 Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);
+                Slog.i(TAG, "Async processing of onUserUnlocked u" + userId
+                        + " tooks " + (SystemClock.elapsedRealtime() - start) + " ms");
             }
         }
     }
