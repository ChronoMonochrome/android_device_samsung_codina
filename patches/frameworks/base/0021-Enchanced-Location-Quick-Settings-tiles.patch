From 8a3741a2c4abccab2f88ec4f1a20dac2667a7dc7 Mon Sep 17 00:00:00 2001
From: Craig Gomez <craigacgomez@gmail.com>
Date: Wed, 16 Sep 2015 08:00:18 -0700
Subject: [PATCH 21/26] Enchanced Location Quick Settings tiles

Toggles through the various locaction modes on click
in the following order:
Off -> Sensors Only -> Battery Saving -> High Acuracy -> Off
---
 packages/SystemUI/res/values/strings.xml           | 10 ++++++
 .../android/systemui/qs/tiles/LocationTile.java    | 36 ++++++++++++++++----
 .../statusbar/policy/LocationController.java       |  2 ++
 .../statusbar/policy/LocationControllerImpl.java   | 38 ++++++++++++++++++++++
 4 files changed, 80 insertions(+), 6 deletions(-)

diff --git a/packages/SystemUI/res/values/strings.xml b/packages/SystemUI/res/values/strings.xml
index 558d90a..da62f56 100644
--- a/packages/SystemUI/res/values/strings.xml
+++ b/packages/SystemUI/res/values/strings.xml
@@ -916,4 +916,14 @@
 
     <!-- Hide quick settings tile confirmation button -->
     <string name="quick_settings_reset_confirmation_button">Hide</string>
+
+    <!-- Advanced quick settings location tile -->
+    <string name="quick_settings_location_label_high_accuracy">High accuracy</string>
+    <string name="quick_settings_location_label_battery_saving">Battery saving</string>
+    <string name="quick_settings_location_label_sensors_only">Sensors only</string>
+    <string name="quick_settings_location_label_off">Off</string>
+    <string name="quick_settings_location_label_on">On</string>
+    <string name="accessibility_quick_settings_location_high_accuracy">Location reporting on in high accuracy mode</string>
+    <string name="accessibility_quick_settings_location_battery_saving">Location reporting on in battery saving mode</string>
+    <string name="accessibility_quick_settings_location_sensors_only">Location reporting on in sensors only mode</string>
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
index a108ec1..12c04f1 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/LocationTile.java
@@ -19,6 +19,7 @@ package com.android.systemui.qs.tiles;
 import android.content.Intent;
 import android.provider.Settings;
 
+import android.provider.Settings;
 import com.android.systemui.R;
 import com.android.systemui.qs.QSTile;
 import com.android.systemui.statusbar.policy.KeyguardMonitor;
@@ -62,8 +63,16 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
 
     @Override
     protected void handleClick() {
-        final boolean wasEnabled = (Boolean) mState.value;
-        mController.setLocationEnabled(!wasEnabled);
+        final int locationMode = mLocationController.getLocationMode();
+        if (locationMode == Settings.Secure.LOCATION_MODE_HIGH_ACCURACY) {
+            mLocationController.setLocationMode(Settings.Secure.LOCATION_MODE_OFF);
+        } else if (locationMode == Settings.Secure.LOCATION_MODE_BATTERY_SAVING) {
+            mLocationController.setLocationMode(Settings.Secure.LOCATION_MODE_HIGH_ACCURACY);
+        } else if (locationMode == Settings.Secure.LOCATION_MODE_SENSORS_ONLY) {
+            mLocationController.setLocationMode(Settings.Secure.LOCATION_MODE_BATTERY_SAVING);
+        } else if (locationMode == Settings.Secure.LOCATION_MODE_OFF) {
+            mLocationController.setLocationMode(Settings.Secure.LOCATION_MODE_SENSORS_ONLY);
+        }
         mEnable.setAllowAnimation(true);
         mDisable.setAllowAnimation(true);
     }
@@ -76,6 +85,7 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
     @Override
     protected void handleUpdateState(BooleanState state, Object arg) {
         final boolean locationEnabled =  mController.isLocationEnabled();
+        final int locationMode = mController.getLocationMode();
 
         // Work around for bug 15916487: don't show location tile on top of lock screen. After the
         // bug is fixed, this should be reverted to only hiding it on secure lock screens:
@@ -84,12 +94,26 @@ public class LocationTile extends QSTile<QSTile.BooleanState> {
         state.value = locationEnabled;
         if (locationEnabled) {
             state.icon = mEnable;
-            state.label = mContext.getString(R.string.quick_settings_location_label);
-            state.contentDescription = mContext.getString(
-                    R.string.accessibility_quick_settings_location_on);
+            if (locationMode == Settings.Secure.LOCATION_MODE_HIGH_ACCURACY) {
+                state.label = mContext.getString(R.string.quick_settings_location_label_high_accuracy);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_location_high_accuracy);
+            } else if (locationMode == Settings.Secure.LOCATION_MODE_BATTERY_SAVING) {
+                state.label = mContext.getString(R.string.quick_settings_location_label_battery_saving);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_location_battery_saving);
+            } else if (locationMode == Settings.Secure.LOCATION_MODE_SENSORS_ONLY) {
+                state.label = mContext.getString(R.string.quick_settings_location_label_sensors_only);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_location_sensors_only);
+            } else {
+                state.label = mContext.getString(R.string.quick_settings_location_label_on);
+                state.contentDescription = mContext.getString(
+                        R.string.accessibility_quick_settings_location_on);
+            }
         } else {
             state.icon = mDisable;
-            state.label = mContext.getString(R.string.quick_settings_location_label);
+            state.label = mContext.getString(R.string.quick_settings_location_label_off);
             state.contentDescription = mContext.getString(
                     R.string.accessibility_quick_settings_location_off);
         }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java
index 29a8981..76cb5cd 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationController.java
@@ -19,6 +19,8 @@ package com.android.systemui.statusbar.policy;
 public interface LocationController {
     boolean isLocationEnabled();
     boolean setLocationEnabled(boolean enabled);
+    boolean setLocationMode(int mode);
+    int getLocationMode();
     void addSettingsChangedCallback(LocationSettingsChangeCallback cb);
     void removeSettingsChangedCallback(LocationSettingsChangeCallback cb);
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationControllerImpl.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationControllerImpl.java
index d8d7042..e51e7e0 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationControllerImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/LocationControllerImpl.java
@@ -138,6 +138,44 @@ public class LocationControllerImpl extends BroadcastReceiver implements Locatio
     }
 
     /**
+     * Switch between the different location modes
+     *
+     * <p>This will attempt to enable/disable every type of location setting
+     * (e.g. high and balanced power).
+     *
+     * <p>If enabling, a user consent dialog will pop up prompting the user to accept.
+     * If the user doesn't accept, network location won't be enabled.
+     *
+     * @return true if attempt to change setting was successful.
+     */
+    public boolean setLocationMode(int mode) {
+        int currentUserId = ActivityManager.getCurrentUser();
+        if (isUserLocationRestricted(currentUserId)) {
+            return false;
+        }
+        final ContentResolver cr = mContext.getContentResolver();
+        // When enabling location, a user consent dialog will pop up, and the
+        // setting won't be fully enabled until the user accepts the agreement.
+        // QuickSettings always runs as the owner, so specifically set the settings
+        // for the current foreground user.
+        return Settings.Secure.putIntForUser(cr, Settings.Secure.LOCATION_MODE,
+                mode, currentUserId);
+    }
+
+    /**
+     * Returns int corresponding to current location mode in settings.
+     */
+    public int getLocationMode() {
+        int currentUserId = ActivityManager.getCurrentUser();
+        if (isUserLocationRestricted(currentUserId)) {
+            return Settings.Secure.LOCATION_MODE_OFF;
+        }
+        final ContentResolver cr = mContext.getContentResolver();
+        return Settings.Secure.getIntForUser(cr, Settings.Secure.LOCATION_MODE,
+                Settings.Secure.LOCATION_MODE_OFF, currentUserId);
+    }
+
+    /**
      * Returns true if the current user is restricted from using location.
      */
     private boolean isUserLocationRestricted(int userId) {
-- 
1.9.1

