From e34685bd910e7ed259c313b4a0a595dd9355cb92 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH 225/296] Ensure that the decor view is attached to window.

In paticular case, the preserve DecorView object may not attach to window,and
when update the decor view layout params, WMS found that it not attached to
window manager will throw IllegalArgumentException, it will lead app to crash.
---
 core/java/android/app/Activity.java                  |  1 +
 core/java/android/app/ActivityThread.java            |  7 ++++++-
 core/java/com/android/internal/policy/DecorView.java | 15 +++++++++++++++
 3 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/core/java/android/app/Activity.java b/core/java/android/app/Activity.java
index 2c04f8ff954..34f6464c1e2 100644
--- a/core/java/android/app/Activity.java
+++ b/core/java/android/app/Activity.java
@@ -5423,6 +5423,7 @@ public class Activity extends ContextThemeWrapper
             ViewManager wm = getWindowManager();
             wm.addView(mDecor, getWindow().getAttributes());
             mWindowAdded = true;
+            DecorView.setAddedToWindow(mDecor);
         }
         mDecor.setVisibility(View.VISIBLE);
     }
diff --git a/core/java/android/app/ActivityThread.java b/core/java/android/app/ActivityThread.java
index a92f54e31da..50e2edb3d2f 100644
--- a/core/java/android/app/ActivityThread.java
+++ b/core/java/android/app/ActivityThread.java
@@ -124,6 +124,7 @@ import com.android.internal.content.ReferrerIntent;
 import com.android.internal.os.BinderInternal;
 import com.android.internal.os.RuntimeInit;
 import com.android.internal.os.SomeArgs;
+import com.android.internal.policy.DecorView;
 import com.android.internal.util.ArrayUtils;
 import com.android.internal.util.FastPrintWriter;
 import com.android.internal.util.IndentingPrintWriter;
@@ -3696,7 +3697,10 @@ public final class ActivityThread {
                 l.type = WindowManager.LayoutParams.TYPE_BASE_APPLICATION;
                 l.softInputMode |= forwardBit;
                 if (r.mPreserveWindow) {
-                    a.mWindowAdded = true;
+                    // if the preserve decor view is not attached to window, we
+                    // should make sure that it will been attached in the following
+                    // workflow.
+                    if(DecorView.isAddedToWindow(decor)) a.mWindowAdded = true;
                     r.mPreserveWindow = false;
                     // Normally the ViewRoot sets up callbacks with the Activity
                     // in addView->ViewRootImpl#setView. If we are instead reusing
@@ -3711,6 +3715,7 @@ public final class ActivityThread {
                     if (!a.mWindowAdded) {
                         a.mWindowAdded = true;
                         wm.addView(decor, l);
+                        DecorView.setAddedToWindow(a.mDecor);
                     } else {
                         // The activity will get a callback for this {@link LayoutParams} change
                         // earlier. However, at that time the decor will not be set (this is set
diff --git a/core/java/com/android/internal/policy/DecorView.java b/core/java/com/android/internal/policy/DecorView.java
index e069c749584..8bf1d6db1b4 100644
--- a/core/java/com/android/internal/policy/DecorView.java
+++ b/core/java/com/android/internal/policy/DecorView.java
@@ -260,6 +260,8 @@ public class DecorView extends FrameLayout implements RootViewSurfaceTaker, Wind
     private final Paint mVerticalResizeShadowPaint = new Paint();
     private final Paint mHorizontalResizeShadowPaint = new Paint();
 
+    private boolean mIsAddedToWindow = false;
+
     DecorView(Context context, int featureId, PhoneWindow window,
             WindowManager.LayoutParams params) {
         super(context);
@@ -2553,4 +2555,17 @@ public class DecorView extends FrameLayout implements RootViewSurfaceTaker, Wind
             }
         }
     }
+
+    public static void setAddedToWindow(View v) {
+        if (v instanceof DecorView) {
+            ((DecorView) v).mIsAddedToWindow = true;
+        }
+    }
+
+    public static boolean isAddedToWindow(View v) {
+        if (v instanceof DecorView) {
+            return ((DecorView) v).mIsAddedToWindow;
+        }
+        return false;
+    }
 }
-- 
2.11.0

