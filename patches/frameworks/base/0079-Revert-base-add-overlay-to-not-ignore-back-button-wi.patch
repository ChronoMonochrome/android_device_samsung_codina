From aa5d5d9c25ed31699a554bd0742703ab1a5d6348 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 29 Dec 2016 00:25:48 +0700
Subject: [PATCH 79/81] Revert "base: add overlay to not ignore back button
 with capacitive buttons disabled (#150)"

This reverts commit 27e42cc463212db1a03fc5e50e87155f70050a6a.

Change-Id: Ife54cba268a6a94014c41e88860543c67b614f34
---
 core/res/res/values/rr_config.xml                  |  4 ++--
 core/res/res/values/rr_symbols.xml                 |  4 ++--
 .../android/server/policy/PhoneWindowManager.java  | 27 ++++++++++++++--------
 3 files changed, 22 insertions(+), 13 deletions(-)

diff --git a/core/res/res/values/rr_config.xml b/core/res/res/values/rr_config.xml
index 63fe48f..40fddff 100644
--- a/core/res/res/values/rr_config.xml
+++ b/core/res/res/values/rr_config.xml
@@ -35,8 +35,8 @@
     <java-symbol type="dimen" name="edge_gesture_perpendicular_distance" />
     <java-symbol type="dimen" name="edge_gesture_trigger_thickness" />
 
-    <!-- Hardware keys keep back always on -->
-    <bool name="config_hwKeysBackAlwaysOn">false</bool>
+    <!-- Hardware keys on/off option -->
+    <bool name="config_hwKeysPref">false</bool>
 
     <!-- Quick settings tiles columns and rows config -->
     <integer name="config_qs_num_rows_landscape_default">2</integer>
diff --git a/core/res/res/values/rr_symbols.xml b/core/res/res/values/rr_symbols.xml
index 9e1e386..292689e 100644
--- a/core/res/res/values/rr_symbols.xml
+++ b/core/res/res/values/rr_symbols.xml
@@ -155,8 +155,8 @@
   <java-symbol type="string" name="adb_not_connected_notification_title" />
   <java-symbol type="string" name="adb_active_custom_tile_not_connected" />
 
-  <!-- Hardware keys keep back always on -->
-  <java-symbol type="bool" name="config_hwKeysBackAlwaysOn" />
+  <!-- Hardware keys on/off option -->
+  <java-symbol type="bool" name="config_hwKeysPref" />
 
   <!-- Quick settings tiles columns and rows config -->
   <java-symbol type="integer" name="config_qs_num_rows_landscape_default"/>
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index e52d35d..7554d35 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -4155,11 +4155,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
             return -1;
         } else if (keyCode == KeyEvent.KEYCODE_BACK) {
-            // Disable back key if navbar hw keys is set to off
-            if (scanCode != 0 && !hasHwKeysEnabled() && !mContext.getResources().getBoolean(com.android.internal.R.bool.config_hwKeysBackAlwaysOn)) {
-                Log.i(TAG, "Ignoring Back Key: we have hw keys disabled");
-                return 0;
-            }
             if (Settings.Secure.getIntForUser(mContext.getContentResolver(),
                     Settings.Secure.KILL_APP_LONGPRESS_BACK, 0, UserHandle.USER_CURRENT) == 1) {
                 if (down && repeatCount == 0) {
@@ -6740,12 +6735,26 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                                                 isKeyguardShowingAndNotOccluded() :
                                                 mKeyguardDelegate.isShowing()));
          // Disable all hw keys actions but let home key wake on if it's enabled
-         if (isHwKeysDisabled()) {
-             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_BACK && !mContext.getResources().getBoolean(com.android.internal.R.bool.config_hwKeysBackAlwaysOn)) {
-                 Log.i(TAG, "Ignoring Back Key: we have hw keys disabled");
+             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_HOME && !mHomeWakeScreen) {
+                 Log.i(TAG, "Ignoring Home Key: we have hw keys and also home key wake disabled");
+                 return 0;
+             }
+             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_MENU) {
+                 Log.i(TAG, "Ignoring Menu Key: we have hw keys disabled");
+                 return 0;
+             }
+             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_SEARCH) {
+                 Log.i(TAG, "Ignoring Search Key: we have hw keys disabled");
+                 return 0;
+             }
+             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_APP_SWITCH) {
+                 Log.i(TAG, "Ignoring App Switch Key: we have hw keys disabled");
+                 return 0;
+             }
+             if (scanCode != 0 && keyCode == KeyEvent.KEYCODE_ASSIST) {
+                 Log.i(TAG, "Ignoring Assist Key: we have hw keys disabled");
                  return 0;
              }
-         }
 
         if (DEBUG_INPUT) {
             Log.d(TAG, "interceptKeyTq keycode=" + keyCode
-- 
2.9.3

