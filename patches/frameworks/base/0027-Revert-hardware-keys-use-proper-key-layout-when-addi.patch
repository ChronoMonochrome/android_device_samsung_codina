From dd1cdd6d2d08bc047b566d7edac9e53a2e93772d Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 25 Jan 2016 01:13:50 +0700
Subject: [PATCH 27/64] Revert "hardware keys: use proper key layout when
 adding a navbar with the keyboard up"

This reverts commit 74a36d37296560f3fd7f9983611636d9b52a600b.
---
 .../systemui/statusbar/phone/NavigationBarView.java      |  9 ++-------
 .../android/systemui/statusbar/phone/PhoneStatusBar.java | 16 ++++++++--------
 2 files changed, 10 insertions(+), 15 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index 796ea60..7623d44 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -874,13 +874,8 @@ public class NavigationBarView extends LinearLayout {
         return mVertical;
     }
 
-    void inflateForHardwareDevice(int hints) {
-        // We're inflating the class here specifically for a hardware key device so we need
-        // to get the IME window state values from PhoneStatusBar since NavigationBarView has not been
-        // initialized
-        showingIME = (hints & StatusBarManager.NAVIGATION_HINT_BACK_ALT) != 0;
-        mNavigationIconHints = hints;
-        reorient();
+    void setIMEState(boolean showing) {
+        showingIME = showing;
     }
 
     public void reorient() {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
index 829cb93..0ef817c 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
@@ -311,7 +311,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     // on-screen navigation buttons
     private NavigationBarView mNavigationBarView = null;
     private int mNavigationBarWindowState = WINDOW_STATE_SHOWING;
-    private boolean mNavbarRequired;
 
     // member to store notification alpha
     private int mAlpha = 255;
@@ -714,7 +713,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         loadDimens();
 
         mIconSize = res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_icon_size);
-        mNavbarRequired = res.getBoolean(com.android.internal.R.bool.config_showNavigationBar);
         final boolean isMultiSimEnabled = MSimTelephonyManager.getDefault().isMultiSimEnabled();
 
         if (isMultiSimEnabled) {
@@ -1266,11 +1264,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     private void prepareNavigationBarView() {
-        if (mNavbarRequired) {
-            mNavigationBarView.reorient();
-        } else {
-            mNavigationBarView.inflateForHardwareDevice(mNavigationIconHints);
-        }
+        mNavigationBarView.setIMEState(showingIME);
+        mNavigationBarView.reorient();
 
         if (mNavigationBarView.getRecentsButton() != null) {
             mNavigationBarView.getRecentsButton().setOnClickListener(mRecentsClickListener);
@@ -2676,7 +2671,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mNavigationIconHints = hints;
 
         if (mNavigationBarView != null) {
-            mNavigationBarView.setNavigationIconHints(hints);
+            boolean nav = true;
+            try {
+                nav = mWindowManagerService.needsNavigationBar();
+            } catch(RemoteException re) {
+            }
+            mNavigationBarView.setNavigationIconHints(hints, !nav);
         }
         checkBarModes();
     }
-- 
2.5.0

