From e04ae367cf51d93c003e85ebb252d15ba6419eb1 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sat, 25 Aug 2018 18:14:27 +0300
Subject: [PATCH 296/296] Debug alarmtimer issues

Change-Id: I63c4ef05f1ea5c1befb3a07609cf4851cfb11c9a
---
 core/java/android/app/ActivityManager.java                     | 10 ++++++++++
 core/java/com/android/internal/os/RoSystemProperties.java      |  2 ++
 .../src/com/android/systemui/recents/RecentsConfiguration.java |  2 +-
 .../core/java/com/android/server/DropBoxManagerService.java    |  2 +-
 .../com/android/server/net/NetworkPolicyManagerService.java    |  2 +-
 .../server/notification/NotificationManagerService.java        |  2 +-
 .../com/android/server/pm/DefaultPermissionGrantPolicy.java    |  2 +-
 services/core/java/com/android/server/wm/AppTransition.java    |  2 +-
 .../java/com/android/server/wm/TaskSnapshotController.java     |  4 ++--
 .../core/java/com/android/server/wm/TaskSnapshotPersister.java |  4 ++--
 services/core/java/com/android/server/wm/WindowState.java      |  4 ++--
 .../voiceinteraction/VoiceInteractionManagerService.java       |  2 +-
 12 files changed, 25 insertions(+), 13 deletions(-)

diff --git a/core/java/android/app/ActivityManager.java b/core/java/android/app/ActivityManager.java
index 2a18ae39144..63a62438bd9 100644
--- a/core/java/android/app/ActivityManager.java
+++ b/core/java/android/app/ActivityManager.java
@@ -1114,6 +1114,16 @@ public class ActivityManager {
                 (Build.IS_DEBUGGABLE && DEVELOPMENT_FORCE_LOW_RAM);
     }
 
+    /** @hide */
+    public boolean isLowRamDevice1() {
+        return isLowRamDeviceStatic1();
+    }
+
+    /** @hide */
+    public static boolean isLowRamDeviceStatic1() {
+        return RoSystemProperties.CONFIG_LOW_RAM1;
+    }
+
     /**
      * Returns true if this is a small battery device. Exactly whether a device is considered to be
      * small battery is ultimately up to the device configuration, but currently it generally means
diff --git a/core/java/com/android/internal/os/RoSystemProperties.java b/core/java/com/android/internal/os/RoSystemProperties.java
index 89a4e17aa97..7b79c434da0 100644
--- a/core/java/com/android/internal/os/RoSystemProperties.java
+++ b/core/java/com/android/internal/os/RoSystemProperties.java
@@ -33,6 +33,8 @@ public class RoSystemProperties {
     // ------ ro.config.* -------- //
     public static final boolean CONFIG_LOW_RAM =
             SystemProperties.getBoolean("ro.config.low_ram", false);
+    public static final boolean CONFIG_LOW_RAM1 =
+            SystemProperties.getBoolean("ro.config.low_ram1", false);
     public static final boolean CONFIG_SMALL_BATTERY =
             SystemProperties.getBoolean("ro.config.small_battery", false);
 
diff --git a/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java b/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
index 5dc6f31cae9..8f7d19ab611 100644
--- a/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
+++ b/packages/SystemUI/src/com/android/systemui/recents/RecentsConfiguration.java
@@ -104,7 +104,7 @@ public class RecentsConfiguration {
         fakeShadows = res.getBoolean(R.bool.config_recents_fake_shadows);
         svelteLevel = res.getInteger(R.integer.recents_svelte_level);
         isGridEnabled = SystemProperties.getBoolean("ro.recents.grid", false);
-        isLowRamDevice = ActivityManager.isLowRamDeviceStatic();
+        isLowRamDevice = ActivityManager.isLowRamDeviceStatic1(); /*false;*/
         dragToSplitEnabled = !isLowRamDevice;
 
         float screenDensity = context.getResources().getDisplayMetrics().density;
diff --git a/services/core/java/com/android/server/DropBoxManagerService.java b/services/core/java/com/android/server/DropBoxManagerService.java
index 887de74f1cf..53447833d95 100644
--- a/services/core/java/com/android/server/DropBoxManagerService.java
+++ b/services/core/java/com/android/server/DropBoxManagerService.java
@@ -826,7 +826,7 @@ public final class DropBoxManagerService extends SystemService {
                 Settings.Global.DROPBOX_AGE_SECONDS, DEFAULT_AGE_SECONDS);
         mMaxFiles = Settings.Global.getInt(mContentResolver,
                 Settings.Global.DROPBOX_MAX_FILES,
-                (ActivityManager.isLowRamDeviceStatic()
+                (ActivityManager.isLowRamDeviceStatic1()
                         ?  DEFAULT_MAX_FILES_LOWRAM : DEFAULT_MAX_FILES));
         long cutoffMillis = System.currentTimeMillis() - ageSeconds * 1000;
         while (!mAllFiles.contents.isEmpty()) {
diff --git a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
index 7fc7b073386..0724b065245 100644
--- a/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
+++ b/services/core/java/com/android/server/net/NetworkPolicyManagerService.java
@@ -273,7 +273,7 @@ public class NetworkPolicyManagerService extends INetworkPolicyManager.Stub {
      */
     @VisibleForTesting
     public static final int MAX_PROC_STATE_SEQ_HISTORY =
-            ActivityManager.isLowRamDeviceStatic() ? 50 : 200;
+            ActivityManager.isLowRamDeviceStatic1() ? 50 : 200;
 
     @VisibleForTesting
     public static final int TYPE_WARNING = SystemMessage.NOTE_NET_WARNING;
diff --git a/services/core/java/com/android/server/notification/NotificationManagerService.java b/services/core/java/com/android/server/notification/NotificationManagerService.java
index d4190010f11..25cf83a473b 100644
--- a/services/core/java/com/android/server/notification/NotificationManagerService.java
+++ b/services/core/java/com/android/server/notification/NotificationManagerService.java
@@ -467,7 +467,7 @@ public class NotificationManagerService extends SystemService {
                 mRankingHelper.readXml(parser, forRestore);
             }
             // No non-system managed services are allowed on low ram devices
-            if (!ActivityManager.isLowRamDeviceStatic()) {
+            if (!ActivityManager.isLowRamDeviceStatic1()) {
                 if (mListeners.getConfig().xmlTag.equals(parser.getName())) {
                     mListeners.readXml(parser);
                     migratedManagedServices = true;
diff --git a/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java b/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
index cb9cd46168b..7479ff885d2 100644
--- a/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
+++ b/services/core/java/com/android/server/pm/DefaultPermissionGrantPolicy.java
@@ -583,7 +583,7 @@ final class DefaultPermissionGrantPolicy {
                 }
             }
 
-            if (ActivityManager.isLowRamDeviceStatic()) {
+            if (ActivityManager.isLowRamDeviceStatic1()) {
                 // Allow voice search on low-ram devices
                 Intent globalSearchIntent = new Intent("android.search.action.GLOBAL_SEARCH");
                 PackageParser.Package globalSearchPickerPackage =
diff --git a/services/core/java/com/android/server/wm/AppTransition.java b/services/core/java/com/android/server/wm/AppTransition.java
index f7f13e0d496..c99773d1f56 100644
--- a/services/core/java/com/android/server/wm/AppTransition.java
+++ b/services/core/java/com/android/server/wm/AppTransition.java
@@ -297,7 +297,7 @@ public class AppTransition implements Dump {
         mClipRevealTranslationY = (int) (CLIP_REVEAL_TRANSLATION_Y_DP
                 * mContext.getResources().getDisplayMetrics().density);
         mGridLayoutRecentsEnabled = SystemProperties.getBoolean("ro.recents.grid", false);
-        mLowRamRecentsEnabled = ActivityManager.isLowRamDeviceStatic();
+        mLowRamRecentsEnabled = ActivityManager.isLowRamDeviceStatic1();
     }
 
     boolean isTransitionSet() {
diff --git a/services/core/java/com/android/server/wm/TaskSnapshotController.java b/services/core/java/com/android/server/wm/TaskSnapshotController.java
index a1868e6f46c..998061dec99 100644
--- a/services/core/java/com/android/server/wm/TaskSnapshotController.java
+++ b/services/core/java/com/android/server/wm/TaskSnapshotController.java
@@ -212,7 +212,7 @@ class TaskSnapshotController {
         if (mainWindow == null) {
             return null;
         }
-        final boolean isLowRamDevice = ActivityManager.isLowRamDeviceStatic();
+        final boolean isLowRamDevice = ActivityManager.isLowRamDeviceStatic1();
         final float scaleFraction = isLowRamDevice ? REDUCED_SCALE : 1f;
         final GraphicBuffer buffer = top.mDisplayContent.screenshotApplicationsToBuffer(top.token,
                 -1, -1, false, scaleFraction, false, true);
@@ -301,7 +301,7 @@ class TaskSnapshotController {
         }
         return new TaskSnapshot(hwBitmap.createGraphicBufferHandle(),
                 topChild.getConfiguration().orientation, mainWindow.mStableInsets,
-                ActivityManager.isLowRamDeviceStatic() /* reduced */, 1.0f /* scale */);
+                ActivityManager.isLowRamDeviceStatic1() /* reduced */, 1.0f /* scale */);
     }
 
     /**
diff --git a/services/core/java/com/android/server/wm/TaskSnapshotPersister.java b/services/core/java/com/android/server/wm/TaskSnapshotPersister.java
index 7b047a80d57..52d3da99850 100644
--- a/services/core/java/com/android/server/wm/TaskSnapshotPersister.java
+++ b/services/core/java/com/android/server/wm/TaskSnapshotPersister.java
@@ -53,8 +53,8 @@ class TaskSnapshotPersister {
     private static final String TAG = TAG_WITH_CLASS_NAME ? "TaskSnapshotPersister" : TAG_WM;
     private static final String SNAPSHOTS_DIRNAME = "snapshots";
     private static final String REDUCED_POSTFIX = "_reduced";
-    static final float REDUCED_SCALE = ActivityManager.isLowRamDeviceStatic() ? 0.6f : 0.5f;
-    static final boolean DISABLE_FULL_SIZED_BITMAPS = ActivityManager.isLowRamDeviceStatic();
+    static final float REDUCED_SCALE = ActivityManager.isLowRamDeviceStatic1() ? 0.6f : 0.5f;
+    static final boolean DISABLE_FULL_SIZED_BITMAPS = ActivityManager.isLowRamDeviceStatic1();
     private static final long DELAY_MS = 100;
     private static final int QUALITY = 95;
     private static final String PROTO_EXTENSION = ".proto";
diff --git a/services/core/java/com/android/server/wm/WindowState.java b/services/core/java/com/android/server/wm/WindowState.java
index 088fbc77c79..91529d25073 100644
--- a/services/core/java/com/android/server/wm/WindowState.java
+++ b/services/core/java/com/android/server/wm/WindowState.java
@@ -21,7 +21,7 @@ import static android.app.ActivityManager.StackId;
 import static android.app.ActivityManager.StackId.FREEFORM_WORKSPACE_STACK_ID;
 import static android.app.ActivityManager.StackId.INVALID_STACK_ID;
 import static android.app.ActivityManager.StackId.PINNED_STACK_ID;
-import static android.app.ActivityManager.isLowRamDeviceStatic;
+import static android.app.ActivityManager.isLowRamDeviceStatic1;
 import static android.os.Trace.TRACE_TAG_WINDOW_MANAGER;
 import static android.view.Display.DEFAULT_DISPLAY;
 import static android.view.ViewTreeObserver.InternalInsetsInfo.TOUCHABLE_INSETS_CONTENT;
@@ -2794,7 +2794,7 @@ class WindowState extends WindowContainer<WindowState> implements WindowManagerP
             return false;
         }
 
-        if (isLowRamDeviceStatic()) {
+        if (isLowRamDeviceStatic1()) {
             // Don't save surfaces on Svelte devices.
             return false;
         }
diff --git a/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java b/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java
index 1569ac32128..efca8919d4d 100644
--- a/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java
+++ b/services/voiceinteraction/java/com/android/server/voiceinteraction/VoiceInteractionManagerService.java
@@ -353,7 +353,7 @@ public class VoiceInteractionManagerService extends SystemService {
             // or devices that have not declared the recognition feature, unless the
             // device's configuration has explicitly set the config flag for a fixed
             // voice interaction service.
-            return (!ActivityManager.isLowRamDeviceStatic()
+            return (!ActivityManager.isLowRamDeviceStatic1()
                             && context.getPackageManager().hasSystemFeature(
                                     PackageManager.FEATURE_VOICE_RECOGNIZERS)) ||
                     getForceVoiceInteractionServicePackage(context.getResources()) != null;
-- 
2.11.0

