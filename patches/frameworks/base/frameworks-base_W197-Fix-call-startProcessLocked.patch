From a0943bd277ed9b5ecaf1c7c1ace7590b1b6da37d Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH] Avoid dangerous recursive call on startProcessLocked

Symptom:
StackOverflow happened at ActivityManagerService#startProcessLocked().

When user data for the current home is cleared, the home package
goes to frozen state in a short time. Home process stops and restarts.
At that time, StackOverflow happens sometimes.

Root cause:
startProcessLocked() can be failed if the target package is frozen.
It has a recovery logic for failure. It calls forceStopPackageLocked()
and it makes unwanted recursive call.

Solution:
Calling forceStopPackageLocked from outside of call stack.

diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index b7144d4..2ca9985 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -4089,8 +4089,12 @@
             // starting this process. (We already invoked this method once when
             // the package was initially frozen through KILL_APPLICATION_MSG, so
             // it doesn't hurt to use it again.)
-            forceStopPackageLocked(app.info.packageName, UserHandle.getAppId(app.uid), false,
-                    false, true, false, false, UserHandle.getUserId(app.userId), "start failure");
+            mHandler.post(() -> {
+                synchronized(ActivityManagerService.this) {
+                    forceStopPackageLocked(app.info.packageName, UserHandle.getAppId(app.uid), false,
+                        false, true, false, false, UserHandle.getUserId(app.userId), "start failure");
+                }
+            });
         }
     }
 
