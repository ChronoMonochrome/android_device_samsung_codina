From a0c576424204dd873c94c9fe896986407a09d11c Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 26 Dec 2016 18:48:38 +0700
Subject: [PATCH 66/81] frameworks-base_W70-use-real-time-UI-Thread.patch

Change-Id: Ib0430be41155bf4d2f111bb1d649c13c21b028e6
---
 core/java/android/os/Process.java                        | 11 +++++++++++
 services/core/java/com/android/server/DisplayThread.java |  2 +-
 services/core/java/com/android/server/UiThread.java      |  6 +++---
 3 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/core/java/android/os/Process.java b/core/java/android/os/Process.java
index e1b7fda..a06d434 100644
--- a/core/java/android/os/Process.java
+++ b/core/java/android/os/Process.java
@@ -285,6 +285,17 @@ public class Process {
     public static final int THREAD_PRIORITY_URGENT_AUDIO = -19;
 
     /**
+     * Real-time priority used for critical UI tasks
+     * This gets converted to be lined into the SCHED_RR queue.
+     * Applications can not normally change to this priority.
+     * Use with {@link #setThreadPriority(int)} and
+     * {@link #setThreadPriority(int, int)}, <b>not</b> with the normal
+     * {@link java.lang.Thread} class.
+     * @hide
+     */
+    public static final int THREAD_PRIORITY_REALTIME = -21;
+
+    /**
      * Minimum increment to make a priority more favorable.
      */
     public static final int THREAD_PRIORITY_MORE_FAVORABLE = -1;
diff --git a/services/core/java/com/android/server/DisplayThread.java b/services/core/java/com/android/server/DisplayThread.java
index 9ef0259..0981141 100644
--- a/services/core/java/com/android/server/DisplayThread.java
+++ b/services/core/java/com/android/server/DisplayThread.java
@@ -30,7 +30,7 @@ public final class DisplayThread extends ServiceThread {
     private static Handler sHandler;
 
     private DisplayThread() {
-        super("android.display", android.os.Process.THREAD_PRIORITY_DISPLAY, false /*allowIo*/);
+        super("android.display", android.os.Process.THREAD_PRIORITY_REALTIME, false /*allowIo*/);
     }
 
     private static void ensureThreadLocked() {
diff --git a/services/core/java/com/android/server/UiThread.java b/services/core/java/com/android/server/UiThread.java
index 1bc6250..0f578f5 100644
--- a/services/core/java/com/android/server/UiThread.java
+++ b/services/core/java/com/android/server/UiThread.java
@@ -21,16 +21,16 @@ import android.os.Process;
 import android.os.Trace;
 
 /**
- * Shared singleton thread for showing UI.  This is a foreground thread, and in
+ * Shared singleton thread for showing UI.  This is a realtime thread, and in
  * additional should not have operations that can take more than a few ms scheduled
- * on it to avoid UI jank.
+ * on it to avoid impacting the runtime of other non-realtime processes.
  */
 public final class UiThread extends ServiceThread {
     private static UiThread sInstance;
     private static Handler sHandler;
 
     private UiThread() {
-        super("android.ui", Process.THREAD_PRIORITY_FOREGROUND, false /*allowIo*/);
+        super("android.ui", Process.THREAD_PRIORITY_REALTIME, false /*allowIo*/);
         // Make sure UiThread is in the fg stune boost group
         Process.setThreadGroup(Process.myTid(), Process.THREAD_GROUP_TOP_APP);
     }
-- 
2.9.3

