 Bluetooth: Clear Gatt Services when discovery initiated by stack

This change clears the service list for the Bluetooth Gatt
object when the stack initiates the discovery and decides to
alert the frameworks at completion.

diff --git a/core/java/android/bluetooth/BluetoothGatt.java b/core/java/android/bluetooth/BluetoothGatt.java
index 1008a5a..010f6bb 100644
--- a/core/java/android/bluetooth/BluetoothGatt.java
+++ b/core/java/android/bluetooth/BluetoothGatt.java
@@ -52,6 +52,7 @@
     private final Object mStateLock = new Object();
     private Boolean mDeviceBusy = false;
     private int mTransport;
+    private boolean mDiscoveryStarted = false;
 
     private static final int CONN_STATE_IDLE = 0;
     private static final int CONN_STATE_CONNECTING = 1;
@@ -208,6 +209,11 @@ public void onGetService(String address, int srvcType,
                 if (!address.equals(mDevice.getAddress())) {
                     return;
                 }
+                if(!mDiscoveryStarted){
+                    if(VDBG) Log.d(TAG, "Service discovery initiated by stack");
+                    mServices.clear();
+                    mDiscoveryStarted = true;
+                }
                 mServices.add(new BluetoothGattService(mDevice, srvcUuid.getUuid(),
                                                        srvcInstId, srvcType));
             }
@@ -301,6 +307,7 @@ public void onSearchComplete(String address, int status) {
                     return;
                 }
                 try {
+                    mDiscoveryStarted = false;
                     mCallback.onServicesDiscovered(BluetoothGatt.this, status);
                 } catch (Exception ex) {
                     Log.w(TAG, "Unhandled exception in callback", ex);
@@ -807,6 +814,7 @@ public boolean discoverServices() {
 
         try {
             mService.discoverServices(mClientIf, mDevice.getAddress());
+            mDiscoveryStarted = true;
         } catch (RemoteException e) {
             Log.e(TAG,"",e);
             return false;
