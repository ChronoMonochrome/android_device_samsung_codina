From b958d08efc328d752b60d2da140f2811d60a905d Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 25 Jan 2016 02:43:27 +0700
Subject: [PATCH 52/64] Revert "NavigationBarView: Reduce getInt instances
 occuring in setDisabledFlags()"

This reverts commit adeb3761e1a6b471815dfb3140794badd5fc1c00.
---
 .../statusbar/phone/NavigationBarView.java         | 54 ++--------------------
 1 file changed, 5 insertions(+), 49 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index 3de22cb..7a43338 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -25,7 +25,6 @@ import android.app.ActivityManagerNative;
 import android.app.StatusBarManager;
 import android.app.admin.DevicePolicyManager;
 import android.content.BroadcastReceiver;
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
@@ -78,6 +77,7 @@ public class NavigationBarView extends LinearLayout {
     final Display mDisplay;
     View mCurrentView = null;
     View[] mRotatedViews = new View[4];
+    private LockPatternUtils mLockUtils;
     
     int mBarSize;
     boolean mVertical;
@@ -95,9 +95,6 @@ public class NavigationBarView extends LinearLayout {
     private ArrayList<AwesomeButtonInfo> mNavButtons = new ArrayList<AwesomeButtonInfo>();
 
     private ContentObserver mSettingsObserver;
-    private ContentObserver mDisablePrefsObserver;
-
-    private LockPatternUtils mLockPatternUtils;
 
     boolean mWasNotifsButtonVisible = false;
 
@@ -252,7 +249,8 @@ public class NavigationBarView extends LinearLayout {
 
         mCameraDisabledByDpm = isCameraDisabledByDpm();
         watchForDevicePolicyChanges();
-        updateNavbarDisabledForPrefs();
+
+        mLockUtils = new LockPatternUtils(context);
     }
 
     private void watchForDevicePolicyChanges() {
@@ -447,7 +445,6 @@ public class NavigationBarView extends LinearLayout {
             }
         }
 
-<<<<<<< HEAD
         final boolean showSearch = disableHome && !disableSearch &&
                 Settings.System.getInt(mContext.getContentResolver(),
                         Settings.System.ENABLE_NAVIGATION_RING, 1) == 1;
@@ -460,11 +457,6 @@ public class NavigationBarView extends LinearLayout {
                     Settings.System.ACTIVE_NOTIFICATIONS, 0) == 1
             && Settings.System.getInt(mContext.getContentResolver(),
                     Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE, 0) == 0;
-=======
-        final boolean showSearch = disableHome && !disableSearch && mPrefNavring;
-        final boolean showCamera = showSearch && !mCameraDisabledByDpm && mLockPatternUtils.getCameraEnabled();
-        final boolean showNotifs = showSearch && mPrefLockscreen;
->>>>>>> 0ca5399... NavigationBarView: Reduce getInt instances occuring in setDisabledFlags()
 
         setVisibleOrGone(getSearchLight(), showSearch);
         setVisibleOrGone(getCameraButton(), showCamera);
@@ -473,18 +465,6 @@ public class NavigationBarView extends LinearLayout {
         mBarTransitions.applyBackButtonQuiescentAlpha(mBarTransitions.getMode(), true /*animate*/);
     }
 
-    private void updateNavbarDisabledForPrefs() {
-        final ContentResolver r = mContext.getContentResolver();
-        mPrefLockscreen = Settings.System.getInt(r,
-                    Settings.System.LOCKSCREEN_NOTIFICATIONS, 0) == 1
-            && Settings.System.getInt(r,
-                    Settings.System.ACTIVE_NOTIFICATIONS, 0) == 1
-            && Settings.System.getInt(r,
-                    Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE, 0) == 0;
-        mPrefNavring = Settings.System.getInt(r,
-                    Settings.System.ENABLE_NAVIGATION_RING, 1) == 1;
-    }
-
     private void setVisibleOrInvisible(View view, boolean visible) {
         if (view != null) {
             view.setVisibility(visible ? VISIBLE : INVISIBLE);
@@ -567,8 +547,6 @@ public class NavigationBarView extends LinearLayout {
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
 
-        final ContentResolver r = mContext.getContentResolver();
-
         if (mSettingsObserver == null) {
             mSettingsObserver = new ContentObserver(new Handler()) {
                 @Override
@@ -577,41 +555,19 @@ public class NavigationBarView extends LinearLayout {
                     setupNavigationButtons();
                 }};
 
-            r.registerContentObserver(Settings.System.getUriFor(Settings.System.NAVIGATION_BAR_BUTTONS),
+            mContext.getContentResolver().registerContentObserver(Settings.System.getUriFor(Settings.System.NAVIGATION_BAR_BUTTONS),
                 false, mSettingsObserver);
         }
-        if (mDisablePrefsObserver == null) {
-            mDisablePrefsObserver = new ContentObserver(new Handler()) {
-                @Override
-                public void onChange(boolean selfChange) {
-                    updateNavbarDisabledForPrefs();
-                }};
-
-            r.registerContentObserver(Settings.System.getUriFor(Settings.System.LOCKSCREEN_NOTIFICATIONS),
-                false, mDisablePrefsObserver);
-            r.registerContentObserver(Settings.System.getUriFor(Settings.System.ENABLE_NAVIGATION_RING),
-                false, mDisablePrefsObserver);
-            r.registerContentObserver(Settings.System.getUriFor(Settings.System.ACTIVE_NOTIFICATIONS),
-                false, mDisablePrefsObserver);
-            r.registerContentObserver(Settings.System.getUriFor(Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE),
-                false, mDisablePrefsObserver);
-        }
     }
 
     @Override
     protected void onDetachedFromWindow() {
         super.onDetachedFromWindow();
 
-        final ContentResolver r = mContext.getContentResolver();
-
         if (mSettingsObserver != null) {
-            r.unregisterContentObserver(mSettingsObserver);
+            mContext.getContentResolver().unregisterContentObserver(mSettingsObserver);
             mSettingsObserver = null;
         }
-        if (mDisablePrefsObserver != null) {
-            r.unregisterContentObserver(mDisablePrefsObserver);
-            mDisablePrefsObserver = null;
-        }
     }
 
     private void setupNavigationButtons() {
-- 
2.5.0

