From 4f1b383901e8b43a05d63c3b8059e7eb6530be4e Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 20 Aug 2018 22:57:43 +0300
Subject: [PATCH 126/296] services: Skip net_transition_wakelock if timeout is
 <= 0

---
 services/core/java/com/android/server/ConnectivityService.java | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/services/core/java/com/android/server/ConnectivityService.java b/services/core/java/com/android/server/ConnectivityService.java
index 8c1f5d8e6e3..d81adc2ab0c 100644
--- a/services/core/java/com/android/server/ConnectivityService.java
+++ b/services/core/java/com/android/server/ConnectivityService.java
@@ -3053,6 +3053,12 @@ public class ConnectivityService extends IConnectivityManager.Stub
     // becomes CONNECTED, whichever happens first.  The timer is started by the
     // first caller and not restarted by subsequent callers.
     private void ensureNetworkTransitionWakelock(String forWhom) {
+        // ensure atomic behavior of this function w.r.t. mNetTransitionWakeLockTimeout
+        int wakelockTimeout = mNetTransitionWakeLockTimeout;
+        if (wakelockTimeout <= 0) {
+            return;
+        }
+
         synchronized (this) {
             if (mNetTransitionWakeLock.isHeld()) {
                 return;
@@ -3063,7 +3069,7 @@ public class ConnectivityService extends IConnectivityManager.Stub
         }
         mWakelockLogs.log("ACQUIRE for " + forWhom);
         Message msg = mHandler.obtainMessage(EVENT_EXPIRE_NET_TRANSITION_WAKELOCK);
-        mHandler.sendMessageDelayed(msg, mNetTransitionWakeLockTimeout);
+        mHandler.sendMessageDelayed(msg, wakelockTimeout);
     }
 
     // Called when we gain a new default network to release the network transition wakelock in a
-- 
2.11.0

