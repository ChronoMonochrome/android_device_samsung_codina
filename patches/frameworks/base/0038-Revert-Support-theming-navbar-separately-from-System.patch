From 45f37cbee42a3d0f739cacb9ba19ea58459e653e Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 25 Jan 2016 01:44:43 +0700
Subject: [PATCH 38/64] Revert "Support theming navbar separately from
 SystemUI"

This reverts commit d2d0d923493bf0e3be1528767451d82c343afef2.

Change-Id: I897cf003bef5b1d1f60c1535020df8a85b332b18
---
 core/java/android/content/res/ThemeConfig.java     |  6 ---
 .../statusbar/phone/NavigationBarView.java         | 54 +---------------------
 .../systemui/statusbar/phone/PhoneStatusBar.java   | 11 -----
 .../systemui/statusbar/policy/KeyButtonView.java   |  7 ---
 4 files changed, 1 insertion(+), 77 deletions(-)

diff --git a/core/java/android/content/res/ThemeConfig.java b/core/java/android/content/res/ThemeConfig.java
index 99b6728..9a5afa8 100644
--- a/core/java/android/content/res/ThemeConfig.java
+++ b/core/java/android/content/res/ThemeConfig.java
@@ -45,12 +45,6 @@ import java.util.Map;
 public class ThemeConfig implements Cloneable, Parcelable, Comparable<ThemeConfig> {
     public static final String TAG = ThemeConfig.class.getCanonicalName();
     public static final String HOLO_DEFAULT = "holo";
-
-    /**
-     * Special package name for theming the navbar separate from the rest of SystemUI
-     */
-    public static final String SYSTEMUI_NAVBAR_PKG = "com.android.systemui.navbar";
-
     // Key for any app which does not have a specific theme applied
     private static final String KEY_DEFAULT_PKG = "default";
     private static final HoloConfig mHoloConfig = new HoloConfig();
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index 340b8a6..5732d48 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -123,8 +123,6 @@ public class NavigationBarView extends LinearLayout {
     // performs manual animation in sync with layout transitions
     private final NavTransitionListener mTransitionListener = new NavTransitionListener();
 
-    private Resources mThemedResources;
-
     private class NavTransitionListener implements TransitionListener {
         private boolean mBackTransitioning;
         private boolean mHomeAppearing;
@@ -255,8 +253,6 @@ public class NavigationBarView extends LinearLayout {
         mMenuButtonWidth = res.getDimensionPixelSize(R.dimen.navigation_menu_key_width);
 
         mBarTransitions = new NavigationBarTransitions(this);
-        mBarTransitions.updateResources(res);
-
 
         mPrimaryButtons = Settings.System.getString(cr, Settings.System.NAVIGATION_BAR_BUTTONS);
         mSideKeys = Settings.System.getInt(cr, Settings.System.NAVIGATION_BAR_SIDEKEYS, 1) == 1;
@@ -351,55 +347,7 @@ public class NavigationBarView extends LinearLayout {
     // used for lockscreen notifications
     public View getNotifsButton() {
         return mCurrentView.findViewById(R.id.show_notifs);
-    }
-
-    public void updateResources(Resources res) {
-        mThemedResources = res;
-        for (int i = 0; i < mRotatedViews.length; i++) {
-            ViewGroup container = (ViewGroup) mRotatedViews[i];
-            if (container != null) {
-                updateKeyButtonViewResources(container);
-                updateLightsOutResources(container);
-            }
-        }
-    }
-
-    private void updateKeyButtonViewResources(ViewGroup container) {
-        if (mCurrentView == null) return;
-        for (final String k : AwesomeConstant.values()) {
-            final View child = mCurrentView.findViewWithTag(k);
-
-            if (child instanceof KeyButtonView) {
-                ((KeyButtonView) child).updateResources(mThemedResources);
-            }
-        }
-        KeyButtonView kbv = (KeyButtonView) findViewById(R.id.one);
-        if (kbv != null) {
-            kbv.updateResources(mThemedResources);
-        }
-        kbv = (KeyButtonView) findViewById(R.id.six);
-        if (kbv != null) {
-            kbv.updateResources(mThemedResources);
-        }
-    }
-
-    private void updateLightsOutResources(ViewGroup container) {
-        ViewGroup lightsOut = (ViewGroup) container.findViewById(R.id.lights_out);
-        if (lightsOut != null) {
-            final int nChildren = lightsOut.getChildCount();
-            for (int i = 0; i < nChildren; i++) {
-                final View child = lightsOut.getChildAt(i);
-                if (child instanceof ImageView) {
-                    final ImageView iv = (ImageView) child;
-                    // clear out the existing drawable, this is required since the
-                    // ImageView keeps track of the resource ID and if it is the same
-                    // it will not update the drawable.
-                    iv.setImageDrawable(null);
-                    iv.setImageDrawable(mThemedResources.getDrawable(
-                            R.drawable.ic_sysbar_lights_out_dot_large));
-                }
-            }
-        }
+        mBarTransitions.updateResources(res);
     }
 
     @Override
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
index 54cc2c1..fca39be 100755
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
@@ -46,7 +46,6 @@ import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
-import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.content.res.ThemeConfig;
 import android.content.res.Resources;
@@ -784,9 +783,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         updateShowSearchHoldoff();
 
         updateNavigationBarState();
-        if (mNavigationBarView != null) {
-            mNavigationBarView.updateResources(getNavbarThemedResources());
-        }
 
         if (!mRecreating) {
             updateActiveDisplayViewState();
@@ -3655,9 +3651,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         repositionNavigationBar();
         addHeadsUpView();
         if (mCustomRecent == 1) rebuildRecentsScreen();
-        if (mNavigationBarView != null) {
-            mNavigationBarView.updateResources(getNavbarThemedResources());
-        }
 
         // recreate StatusBarIconViews.
         for (int i = 0; i < nIcons; i++) {
@@ -3723,10 +3716,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         // Update the QuickSettings container
         if (mQS != null) mQS.updateResources();
 
-        if (mNavigationBarView != null)  {
-            mNavigationBarView.updateResources(getNavbarThemedResources());
-            updateSearchPanel();
-        }
     }
 
     protected void loadDimens() {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/policy/KeyButtonView.java b/packages/SystemUI/src/com/android/systemui/statusbar/policy/KeyButtonView.java
index e6449ad..7d40474 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/policy/KeyButtonView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/policy/KeyButtonView.java
@@ -133,13 +133,6 @@ public class KeyButtonView extends ImageView {
         setLongClickable(false);
     }
 
-    public void updateResources(Resources res) {
-        if (mGlowBgId != 0) {
-            mGlowBG = res.getDrawable(mGlowBgId);
-        }
-        setImage(res);
-    }
-
     public void setButtonActions(AwesomeButtonInfo actions) {
         this.mActions = actions;
 
-- 
2.5.0

