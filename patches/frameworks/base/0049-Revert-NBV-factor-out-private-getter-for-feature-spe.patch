From d8e4e9d06ac2dde2d02a5d832e0ea694955729ab Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 25 Jan 2016 02:42:44 +0700
Subject: [PATCH 49/64] Revert "NBV: factor out private getter for
 feature-specific disabled navbar flags"

This reverts commit c85a8d430702acf516cd9becaabafa140e30d7fa.
---
 .../statusbar/phone/NavigationBarView.java         | 26 ++++++++++++----------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index cd01a70..c991d69 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -254,6 +254,7 @@ public class NavigationBarView extends LinearLayout {
         watchForDevicePolicyChanges();
 
         mLockPatternUtils = new LockPatternUtils(context);
+        updateNavbarDisabledForPrefs();
     }
 
     private void watchForDevicePolicyChanges() {
@@ -459,6 +460,18 @@ public class NavigationBarView extends LinearLayout {
         mBarTransitions.applyBackButtonQuiescentAlpha(mBarTransitions.getMode(), true /*animate*/);
     }
 
+    private void updateNavbarDisabledForPrefs() {
+        final ContentResolver r = mContext.getContentResolver();
+        mPrefLockscreen = Settings.System.getInt(r,
+                    Settings.System.LOCKSCREEN_NOTIFICATIONS, 0) == 1
+            && Settings.System.getInt(r,
+                    Settings.System.ACTIVE_NOTIFICATIONS, 0) == 1
+            && Settings.System.getInt(r,
+                    Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE, 0) == 0;
+        mPrefNavring = Settings.System.getInt(r,
+                    Settings.System.ENABLE_NAVIGATION_RING, 1) == 1;
+    }
+
     private void setVisibleOrInvisible(View view, boolean visible) {
         if (view != null) {
             view.setVisibility(visible ? VISIBLE : INVISIBLE);
@@ -554,19 +567,11 @@ public class NavigationBarView extends LinearLayout {
             r.registerContentObserver(Settings.System.getUriFor(Settings.System.NAVIGATION_BAR_BUTTONS),
                 false, mSettingsObserver);
         }
-
         if (mDisablePrefsObserver == null) {
             mDisablePrefsObserver = new ContentObserver(new Handler()) {
                 @Override
                 public void onChange(boolean selfChange) {
-                    mPrefLockscreen = Settings.System.getInt(r,
-                                    Settings.System.LOCKSCREEN_NOTIFICATIONS, 0) == 1
-                            && Settings.System.getInt(r,
-                                    Settings.System.ACTIVE_NOTIFICATIONS, 0) == 1
-                            && Settings.System.getInt(r,
-                                    Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE, 0) == 0;
-                    mPrefNavring = Settings.System.getInt(r,
-                            Settings.System.ENABLE_NAVIGATION_RING, 1) == 1;
+                    updateNavbarDisabledForPrefs();
                 }};
 
             r.registerContentObserver(Settings.System.getUriFor(Settings.System.LOCKSCREEN_NOTIFICATIONS),
@@ -577,9 +582,6 @@ public class NavigationBarView extends LinearLayout {
                 false, mDisablePrefsObserver);
             r.registerContentObserver(Settings.System.getUriFor(Settings.System.ACTIVE_NOTIFICATIONS_PRIVACY_MODE),
                 false, mDisablePrefsObserver);
-
-            // pop goes the weasel
-            mDisablePrefsObserver.onChange(true);
         }
     }
 
-- 
2.5.0

