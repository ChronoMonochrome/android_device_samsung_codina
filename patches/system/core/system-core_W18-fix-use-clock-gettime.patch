From 315bd1df3749b94f11cac098cce7510f5bf828ca Mon Sep 17 00:00:00 2001
From: Greg Hackmann <ghackmann@google.com>
Date: Mon, 25 Apr 2016 10:39:55 -0700
 Revert "SystemClock: elapsedRealtimeNano() should use clock_gettime() on Linux"

diff --git a/libutils/SystemClock.cpp b/libutils/SystemClock.cpp
index b4a25f2..a0397a0 100644
--- a/libutils/SystemClock.cpp
+++ b/libutils/SystemClock.cpp
@@ -29,6 +29,13 @@
 
 #include <cutils/compiler.h>
 
+#if defined(__ANDROID__)
+#include <linux/ioctl.h>
+#include <linux/rtc.h>
+#include <utils/Atomic.h>
+#include <linux/android_alarm.h>
+#endif
+
 #include <utils/Timers.h>
 #include <utils/Log.h>
 
@@ -56,16 +63,30 @@ int64_t elapsedRealtime()
  */
 int64_t elapsedRealtimeNano()
 {
-#if defined(__linux__)
+#if defined(__ANDROID__)
+    static int s_fd = -1;
+
+    if (s_fd == -1) {
+        int fd = open("/dev/alarm", O_RDONLY);
+        if (android_atomic_cmpxchg(-1, fd, &s_fd)) {
+            close(fd);
+        }
+    }
+
     struct timespec ts;
-    int err = clock_gettime(CLOCK_BOOTTIME, &ts);
-    if (CC_UNLIKELY(err)) {
-        // This should never happen, but just in case ...
-        ALOGE("clock_gettime(CLOCK_BOOTTIME) failed: %s", strerror(errno));
-        return 0;
+    if (ioctl(s_fd, ANDROID_ALARM_GET_TIME(ANDROID_ALARM_ELAPSED_REALTIME), &ts) == 0) {
+        return seconds_to_nanoseconds(ts.tv_sec) + ts.tv_nsec;
+    }
+
+    // /dev/alarm doesn't exist, fallback to CLOCK_BOOTTIME
+    if (clock_gettime(CLOCK_BOOTTIME, &ts) == 0) {
+        return seconds_to_nanoseconds(ts.tv_sec) + ts.tv_nsec;
     }
 
-    return seconds_to_nanoseconds(ts.tv_sec) + ts.tv_nsec;
+    // XXX: there was an error, probably because the driver didn't
+    // exist ... this should return
+    // a real error, like an exception!
+    return systemTime(SYSTEM_TIME_MONOTONIC);
 #else
     return systemTime(SYSTEM_TIME_MONOTONIC);
 #endif
