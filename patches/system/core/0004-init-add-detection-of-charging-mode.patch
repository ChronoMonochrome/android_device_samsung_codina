From 24454ef39258de37b11917e87a604e18cdd7d3a3 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Sat, 17 Dec 2011 17:26:54 -0500
Subject: [PATCH 4/6] init: add detection of charging mode

Based on Prashant Somashekar's patch which is in turn based on techomancer's
patch http://goo.gl/I19GG.

When BOARD_CHARGING_MODE_BOOTING_LPM is set, init will read that
value (usually from /sys) and enable charging mode when set to 1.

This differs from the original patch in that Samsung-specific lpm.rc
is not loaded, but instead, init.rc is loaded using the "charger" class,
which is how AOSP devices handle charging.

The change is because the either the SELinux or the init.rc changes is
causing lpm.rc to not work, and porting lpm.rc to the Android system
is easier than trying to fix it.

Change-Id: Ice7a074da7e982f9a64aaa97de28bfcbccdc8b91

Conflicts:

	init/init.c
---
 init/Android.mk |  8 ++++++++
 init/init.c     | 21 ++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 init/Android.mk

diff --git a/init/Android.mk b/init/Android.mk
old mode 100644
new mode 100755
index 72c2272..fc40652
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -31,6 +31,14 @@ endif
 # Enable ueventd logging
 #LOCAL_CFLAGS += -DLOG_UEVENTS=1
 
+SYSTEM_CORE_INIT_DEFINES := BOARD_CHARGING_MODE_BOOTING_LPM
+
+$(foreach system_core_init_define,$(SYSTEM_CORE_INIT_DEFINES), \
+  $(if $($(system_core_init_define)), \
+    $(eval LOCAL_CFLAGS += -D$(system_core_init_define)=\"$($(system_core_init_define))\") \
+  ) \
+)
+
 LOCAL_MODULE:= init
 
 # Currently, init doesn't start when built with clang.
diff --git a/init/init.c b/init/init.c
index 99474e6..64e89f8 100644
--- a/init/init.c
+++ b/init/init.c
@@ -999,6 +999,25 @@ static void selinux_initialize(void)
     security_setenforce(is_enforcing);
 }
 
+static int charging_mode_booting(void)
+{
+#ifndef BOARD_CHARGING_MODE_BOOTING_LPM
+    return 0;
+#else
+    int f;
+    char cmb;
+    f = open(BOARD_CHARGING_MODE_BOOTING_LPM, O_RDONLY);
+    if (f < 0)
+        return 0;
+
+    if (1 != read(f, (void *)&cmb,1))
+        return 0;
+
+    close(f);
+    return ('1' == cmb);
+#endif
+}
+
 int main(int argc, char **argv)
 {
     int fd_count = 0;
@@ -1069,7 +1088,7 @@ int main(int argc, char **argv)
     restorecon("/dev/__properties__");
     restorecon_recursive("/sys");
 
-    is_charger = !strcmp(bootmode, "charger");
+    is_charger = !strcmp(bootmode, "charger") || charging_mode_booting();
 
     INFO("property init\n");
     property_load_boot_defaults();
-- 
1.9.1

