From 9d504de14bbd67c79a25636b7970156d49749383 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Sat, 12 Mar 2016 14:41:11 +0700
Subject: [PATCH 4/6] Revert "Mount selinuxfs when other filesystems are
 mounted"

This reverts commit 3d9e27335926497c82bcfab228b90b84d732780f.
---
 init/init.cpp |  1 -
 init/util.cpp | 22 ++++++++++++----------
 2 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/init/init.cpp b/init/init.cpp
index 9e6143b..4aef823 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -561,7 +561,6 @@ int main(int argc, char** argv) {
         #define MAKE_STR(x) __STRING(x)
         mount("proc", "/proc", "proc", 0, "hidepid=2,gid=" MAKE_STR(AID_READPROC));
         mount("sysfs", "/sys", "sysfs", 0, NULL);
-        mount("selinuxfs", "/sys/fs/selinux", "selinuxfs", 0, NULL);
     }
 
     // We must have some place other than / to create the device nodes for
diff --git a/init/util.cpp b/init/util.cpp
index bddc3b2..84b4155 100644
--- a/init/util.cpp
+++ b/init/util.cpp
@@ -401,18 +401,20 @@ int wait_for_file(const char *filename, int timeout)
 
 void open_devnull_stdio(void)
 {
+    // Try to avoid the mknod() call if we can. Since SELinux makes
+    // a /dev/null replacement available for free, let's use it.
     int fd = open("/sys/fs/selinux/null", O_RDWR);
     if (fd == -1) {
-        /* Fail silently.
-         * stdout/stderr isn't available, and because
-         * klog_init() is called after open_devnull_stdio(), we can't
-         * log to dmesg. Reordering klog_init() to be called before
-         * open_devnull_stdio() isn't an option either, as then klog_fd
-         * will be assigned 0 or 1, which will end up getting clobbered
-         * by the code below. There's nowhere good to log.
-         */
-
-        exit(1);
+        // OOPS, /sys/fs/selinux/null isn't available, likely because
+        // /sys/fs/selinux isn't mounted. Fall back to mknod.
+        static const char *name = "/dev/__null__";
+        if (mknod(name, S_IFCHR | 0600, (1 << 8) | 3) == 0) {
+            fd = open(name, O_RDWR);
+            unlink(name);
+        }
+        if (fd == -1) {
+            exit(1);
+        }
     }
 
     dup2(fd, 0);
-- 
2.5.0

