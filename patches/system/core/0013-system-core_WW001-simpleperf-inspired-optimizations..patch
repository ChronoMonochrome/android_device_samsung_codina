From 2ee6ccd40c7bdb3f139d3eb11a555de657b8252b Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Mon, 14 Mar 2016 19:14:16 +0700
Subject: [PATCH 13/18] 
 system-core_WW001-simpleperf-inspired-optimizations.patch

Change-Id: I6dfe1fab297e73c5741b49fe2796832714399ab0
---
 logd/LogListener.cpp | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/logd/LogListener.cpp b/logd/LogListener.cpp
index b29f5ab..4338f25 100644
--- a/logd/LogListener.cpp
+++ b/logd/LogListener.cpp
@@ -44,7 +44,6 @@ bool LogListener::onDataAvailable(SocketClient *cli) {
     char buffer[sizeof_log_id_t + sizeof(uint16_t) + sizeof(log_time)
         + LOGGER_ENTRY_MAX_PAYLOAD];
     struct iovec iov = { buffer, sizeof(buffer) };
-    memset(buffer, 0, sizeof(buffer));
 
     char control[CMSG_SPACE(sizeof(struct ucred))];
     struct msghdr hdr = {
@@ -59,6 +58,9 @@ bool LogListener::onDataAvailable(SocketClient *cli) {
 
     int socket = cli->getSocket();
 
+    // To clear the entire buffer is secure/safe, but this contributes to 1.68%
+    // overhead under logging load. We are safe because we check counts.
+    // memset(buffer, 0, sizeof(buffer));
     ssize_t n = recvmsg(socket, &hdr, 0);
     if (n <= (ssize_t)(sizeof(android_log_header_t))) {
         return false;
-- 
2.5.0

