From 9819338dff844f6b625f70140e8d509b21e13fe3 Mon Sep 17 00:00:00 2001
From: zefie <zefie@zefie.net>
Date: Sat, 12 May 2018 15:56:35 -0400
Subject: [PATCH 11/40] Bootloop fixes

---
 init/Android.mk | 2 +-
 init/init.cpp   | 6 ++++--
 init/util.cpp   | 6 ++++++
 init/util.h     | 1 +
 4 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/init/Android.mk b/init/Android.mk
index bb079b998..2f56c2e33 100644
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -8,7 +8,7 @@ ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))
 init_options += \
     -DALLOW_LOCAL_PROP_OVERRIDE=1 \
     -DALLOW_PERMISSIVE_SELINUX=1 \
-    -DREBOOT_BOOTLOADER_ON_PANIC=1 \
+    -DREBOOT_BOOTLOADER_ON_PANIC=0 \
     -DDUMP_ON_UMOUNT_FAILURE=1
 else
 init_options += \
diff --git a/init/init.cpp b/init/init.cpp
index 35fc442d0..b7a4f83f6 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -430,8 +430,8 @@ static int set_mmap_rnd_bits_action(const std::vector<std::string>& args)
 #endif
 
     if (ret == -1) {
-        LOG(ERROR) << "Unable to set adequate mmap entropy value!";
-        security_failure();
+        LOG(INFO) << "Unable to set adequate mmap entropy value!";
+        // security_failure();
     }
     return ret;
 }
@@ -977,6 +977,8 @@ static void InstallRebootSignalHandlers() {
 
         // panic() reboots to bootloader
         panic();
+        // panic1() reboots to recovery
+        panic1();
     };
     action.sa_flags = SA_RESTART;
     sigaction(SIGABRT, &action, nullptr);
diff --git a/init/util.cpp b/init/util.cpp
index fdcb22d1c..c1e9a87fe 100644
--- a/init/util.cpp
+++ b/init/util.cpp
@@ -376,6 +376,12 @@ void panic() {
     DoReboot(ANDROID_RB_RESTART2, "reboot", "bootloader", false);
 }
 
+void panic1() {
+    LOG(ERROR) << "panic: rebooting to recovery";
+    // Do not queue "shutdown" trigger since we want to shutdown immediately
+    DoReboot(ANDROID_RB_RESTART2, "reboot", "recovery", false);
+}
+
 static std::string init_android_dt_dir() {
     // Use the standard procfs-based path by default
     std::string android_dt_dir = kDefaultAndroidDtDir;
diff --git a/init/util.h b/init/util.h
index 29c10cba2..e5622e59c 100644
--- a/init/util.h
+++ b/init/util.h
@@ -54,6 +54,7 @@ bool is_dir(const char* pathname);
 bool expand_props(const std::string& src, std::string* dst);
 
 void panic() __attribute__((__noreturn__));
+void panic1() __attribute__((__noreturn__));
 
 // Returns the platform's Android DT directory as specified in the kernel cmdline.
 // If the platform does not configure a custom DT path, returns the standard one (based in procfs).
-- 
2.11.0

