From 8eed794a990adfdd2b082e09acc215b71c527050 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Thu, 4 May 2017 10:26:25 +0300
Subject: [PATCH 16/25] system-core_WW07-realtime-scheduler-class.patch

Change-Id: I067b544c2982c04267be03f43fa0486f042ac31b
---
 include/cutils/sched_policy.h |  1 +
 libcutils/sched_policy.c      | 35 +++++++++++++++++++++++++++++------
 2 files changed, 30 insertions(+), 6 deletions(-)

diff --git a/include/cutils/sched_policy.h b/include/cutils/sched_policy.h
index 591bd44..b1c6799 100644
--- a/include/cutils/sched_policy.h
+++ b/include/cutils/sched_policy.h
@@ -30,6 +30,7 @@ typedef enum {
     SP_AUDIO_APP  = 3,
     SP_AUDIO_SYS  = 4,
     SP_TOP_APP    = 5,
+    SP_REALTIME   = 6, /* Motorola, rknize2, 05/10/2013, IKJBXLINE-9555 */
     SP_CNT,
     SP_MAX        = SP_CNT - 1,
     SP_SYSTEM_DEFAULT = SP_FOREGROUND,
diff --git a/libcutils/sched_policy.c b/libcutils/sched_policy.c
index 0df5bf3..1dadc85 100644
--- a/libcutils/sched_policy.c
+++ b/libcutils/sched_policy.c
@@ -273,6 +273,10 @@ int get_sched_policy(int tid, SchedPolicy *policy)
             *policy = SP_FOREGROUND;
         else if (rc == SCHED_BATCH)
             *policy = SP_BACKGROUND;
+/* BEGIN Motorola, rknize2, 05/10/2013, IKJBXLINE-9555 */
+        else if (rc == SCHED_RR)
+            *policy = SP_REALTIME;
+/* END Motorola, IKJBXLINE-9555 */
         else {
             errno = ERANGE;
             return -1;
@@ -379,13 +383,22 @@ int set_sched_policy(int tid, SchedPolicy policy)
     case SP_SYSTEM:
         SLOGD("/// tid %d (%s)", tid, thread_name);
         break;
+/* BEGIN Motorola, rknize2, 05/10/2013, IKJBXLINE-9555 */
+    case SP_REALTIME:
+        SLOGD("!!! tid %d (%s)", tid, thread_name);
+        break;
+/* END Motorola, IKJBXLINE-9555 */
     default:
         SLOGD("??? tid %d (%s)", tid, thread_name);
         break;
     }
 #endif
 
-    if (__sys_supports_schedgroups) {
+/* BEGIN Motorola, rknize2, 05/10/2013, IKJBXLINE-9555
+ * Schedule groups are not supported for RT processes. */
+    if (__sys_supports_schedgroups &&
+        policy != SP_REALTIME) {
+/* END Motorola, IKJBXLINE-9555 */
         int fd = -1;
         int boost_fd = -1;
         switch (policy) {
@@ -423,12 +436,21 @@ int set_sched_policy(int tid, SchedPolicy policy)
 #endif
     } else {
         struct sched_param param;
+/* BEGIN Motorola, rknize2, 05/10/2013, IKJBXLINE-9555
+ * Allow the RT policy at the lowest priority. */
+        int posix_policy = SCHED_NORMAL;
+
+        param.sched_priority = 0; /* unused for non-RT policies */
+        if (policy == SP_BACKGROUND) {
+            posix_policy = SCHED_BATCH;
+        } else if (policy == SP_REALTIME) {
+            posix_policy = SCHED_RR;
+            param.sched_priority = 1; /* lowest RT priority */
+        }
 
-        param.sched_priority = 0;
-        sched_setscheduler(tid,
-                           (policy == SP_BACKGROUND) ?
-                           SCHED_BATCH : SCHED_NORMAL,
-                           &param);
+        if (sched_setscheduler(tid, posix_policy, &param) < 0)
+            SLOGE("sched_setscheduler failed: tid %d, errno=%d", tid, errno);
+/* END Motorola, IKJBXLINE-9555 */
     }
 
     prctl(PR_SET_TIMERSLACK_PID,
@@ -464,6 +486,7 @@ const char *get_sched_policy_name(SchedPolicy policy)
        [SP_AUDIO_APP]  = "aa",
        [SP_AUDIO_SYS]  = "as",
        [SP_TOP_APP]    = "ta",
+       [SP_REALTIME]   = "rt", /* Motorola, w04904, 05/10/2013, IKJBXLINE-9555 */
     };
     if ((policy < SP_CNT) && (strings[policy] != NULL))
         return strings[policy];
-- 
2.5.0

