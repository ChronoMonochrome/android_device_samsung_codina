From b996d1ad035a92dc60ba99ca0b7b1b11851b3f0b Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Tue, 16 Feb 2016 21:39:53 +0700
Subject: [PATCH 01/52] 
 0001-init-force-SELinux-to-be-permissive-on-all-builds.patch

Change-Id: I54fa76cad1c605889060a91780648863bcfea407
---
 init/Android.mk |  4 +---
 init/init.c     | 25 +------------------------
 2 files changed, 2 insertions(+), 27 deletions(-)

diff --git a/init/Android.mk b/init/Android.mk
index c6863bf..1c01cbe 100755
--- a/init/Android.mk
+++ b/init/Android.mk
@@ -25,9 +25,7 @@ LOCAL_SRC_FILES += bootchart.c
 LOCAL_CFLAGS    += -DBOOTCHART=1
 endif
 
-ifneq (,$(filter userdebug eng,$(TARGET_BUILD_VARIANT)))
-LOCAL_CFLAGS += -DALLOW_LOCAL_PROP_OVERRIDE=1 -DALLOW_DISABLE_SELINUX=1
-endif
+LOCAL_CFLAGS += -DALLOW_LOCAL_PROP_OVERRIDE=1
 
 # Enable ueventd logging
 #LOCAL_CFLAGS += -DLOG_UEVENTS=1
diff --git a/init/init.c b/init/init.c
index 1cce8d8..ef64d2d 100644
--- a/init/init.c
+++ b/init/init.c
@@ -924,29 +924,6 @@ static bool selinux_is_disabled(void)
     return false;
 }
 
-static bool selinux_is_enforcing(void)
-{
-#ifdef ALLOW_DISABLE_SELINUX
-    char tmp[PROP_VALUE_MAX];
-
-    if (property_get("ro.boot.selinux", tmp) == 0) {
-        /* Property is not set.  Assume enforcing */
-        return true;
-    }
-
-    if (strcmp(tmp, "permissive") == 0) {
-        /* SELinux is in the kernel, but we've been told to go into permissive mode */
-        return false;
-    }
-
-    if (strcmp(tmp, "enforcing") != 0) {
-        ERROR("SELinux: Unknown value of ro.boot.selinux. Got: \"%s\". Assuming enforcing.\n", tmp);
-    }
-
-#endif
-    return true;
-}
-
 int selinux_reload_policy(void)
 {
     if (selinux_is_disabled()) {
@@ -1010,7 +987,7 @@ static void selinux_initialize(void)
     }
 
     selinux_init_all_handles();
-    bool is_enforcing = selinux_is_enforcing();
+    bool is_enforcing = false;
     INFO("SELinux: security_setenforce(%d)\n", is_enforcing);
     security_setenforce(is_enforcing);
 }
-- 
2.5.0

