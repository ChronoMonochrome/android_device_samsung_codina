From 1704c4c95c57275aaeb06c70d61cf7b504b7252a Mon Sep 17 00:00:00 2001
From: Dan Albert <danalbert@google.com>
Date: Mon, 8 Sep 2014 19:09:41 -0700
Subject: [PATCH 38/52] Fix some clang compilation issues.

Use expected inline behavior with clang.

GCC defaults to -std=gnu90, giving C89 inline semantics with GNU
extensions. Clang defaults to C99. Explicitly use gnu90.

Mark an unused parameter as __unused.

Fix some incorrect casts.

Change-Id: I05b95585d5e3688eda71769b63b6b8a9237bcaf4
---
 fastbootd/vendor_trigger_default.c        | 2 +-
 libcutils/Android.mk                      | 2 +-
 libpixelflinger/codeflinger/CodeCache.cpp | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/fastbootd/vendor_trigger_default.c b/fastbootd/vendor_trigger_default.c
index 3627024..0bcc99b 100644
--- a/fastbootd/vendor_trigger_default.c
+++ b/fastbootd/vendor_trigger_default.c
@@ -52,7 +52,7 @@ int trigger_gpt_layout(struct GPT_content *table) {
     return 0;
 }
 
-int trigger_oem_cmd(const char *arg, const char **response) {
+int trigger_oem_cmd(const char *arg, const char **response __unused) {
     KLOG_DEBUG("fastbootd", "%s: %s", __func__, arg);
     return 0;
 }
diff --git a/libcutils/Android.mk b/libcutils/Android.mk
index 5a803f8..60815c7 100644
--- a/libcutils/Android.mk
+++ b/libcutils/Android.mk
@@ -151,7 +151,7 @@ endif
 
 LOCAL_C_INCLUDES := $(libcutils_c_includes)
 LOCAL_STATIC_LIBRARIES := liblog
-LOCAL_CFLAGS += $(targetSmpFlag) -std=gnu89
+LOCAL_CFLAGS += $(targetSmpFlag) -std=gnu90
 LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk
 include $(BUILD_STATIC_LIBRARY)
 
diff --git a/libpixelflinger/codeflinger/CodeCache.cpp b/libpixelflinger/codeflinger/CodeCache.cpp
index cfd2b37..d770302 100644
--- a/libpixelflinger/codeflinger/CodeCache.cpp
+++ b/libpixelflinger/codeflinger/CodeCache.cpp
@@ -201,8 +201,8 @@ int CodeCache::cache(  const AssemblyKeyBase& keyBase,
         mCacheInUse += assemblySize;
         mWhen++;
         // synchronize caches...
-        void* base = assembly->base();
-        void* curr = (uint8_t*)base + assembly->size();
+        char* base = reinterpret_cast<char*>(assembly->base());
+        char* curr = reinterpret_cast<char*>(base + assembly->size());
         __builtin___clear_cache(base, curr);
     }
 
-- 
2.5.0

