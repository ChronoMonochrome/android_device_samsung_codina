From a79af3ce1fa59b5c693dd3238e11f15e5cf1a4a7 Mon Sep 17 00:00:00 2001
From: Elad Alfassa <ealfassa@redhat.com>
Date: Mon, 7 May 2018 11:36:25 +0300
Subject: [PATCH] Disable SELinux enforcement.

diff --git a/init/init.cpp b/init/init.cpp
index aac1b5c..01bb774 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -1129,7 +1129,6 @@
 
     // Make the time that init started available for bootstat to log.
     property_set("ro.boottime.init", getenv("INIT_STARTED_AT"));
-    property_set("ro.boottime.init.selinux", getenv("INIT_SELINUX_TOOK"));
 
     // Set libavb version for Framework-only OTA match in Treble build.
     const char* avb_version = getenv("INIT_AVB_VERSION");
diff --git a/init/init.cpp b/init/init.cpp
index 60bd8d8..3d42598 100644
--- a/init/init.cpp
+++ b/init/init.cpp
@@ -605,6 +605,15 @@ static selinux_enforcing_status selinux_status_from_cmdline() {
     return status;
 }
 
+static bool selinux_is_enforcing(void)
+{
+    if (ALLOW_PERMISSIVE_SELINUX) {
+        if (selinux_status_from_cmdline() == SELINUX_ENFORCING)
+            return false;
+    }
+    return false;
+}
+
 static int audit_callback(void *data, security_class_t /*cls*/, char *buf, size_t len) {
 
     property_audit_data *d = reinterpret_cast<property_audit_data*>(data);
@@ -901,7 +910,7 @@ static void selinux_initialize(bool in_kernel_domain) {
         }
 
         bool kernel_enforcing = (security_getenforce() == 1);
-        bool is_enforcing = false;
+        bool is_enforcing = selinux_is_enforcing();
         if (kernel_enforcing != is_enforcing) {
             if (security_setenforce(is_enforcing)) {
                 PLOG(ERROR) << "security_setenforce(%s) failed" << (is_enforcing ? "true" : "false");
