Subject: [PATCH] Avoid ANR caused by synchronized() of appDiedLocked()

Symptom:
SystemUI is crashed by ANR.

Root cause:
 1) The application is crashed.
 2) ActivityManagerService handles it using AppDeathRecipient.
 3) AppDeathRecipient calls synchronized() for a long time.
 4) SystemUI calls the method locked by synchronized on Main thread.
 5) Main thread is blocked. and SystemUI is crashed by ANR.

Solution:
updateOomAdjLocked() is moved to Handler thread
from ActivityManagerService#appDiedLocked().

diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index c76a1cfb9da..d519f3d1a8c 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -1703,6 +1703,8 @@ public void binderDied() {
     static ServiceThread sKillThread = null;
     static KillHandler sKillHandler = null;
 
+    static final int UPDATE_OOMADJ_MSG = 99999;
+
     CompatModeDialog mCompatModeDialog;
     UnsupportedDisplaySizeDialog mUnsupportedDisplaySizeDialog;
     long mLastMemUsageReportTime = 0;
@@ -2508,6 +2510,11 @@ public void handleMessage(Message msg) {
                     }
                 }
             } break;
+            case UPDATE_OOMADJ_MSG: {
+                synchronized (ActivityManagerService.this) {
+                    updateOomAdjLocked();
+                }
+            } break;
             }
         }
     };
@@ -5540,7 +5547,8 @@ final void appDiedLocked(ProcessRecord app, int pid, IApplicationThread thread,
             handleAppDiedLocked(app, false, true);
 
             if (doOomAdj) {
-                updateOomAdjLocked();
+                mHandler.removeMessages(UPDATE_OOMADJ_MSG);
+                mHandler.sendEmptyMessage(UPDATE_OOMADJ_MSG);
             }
             if (doLowMem) {
                 doLowMemReportIfNeededLocked(app);
