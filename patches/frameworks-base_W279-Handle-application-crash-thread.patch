Subject: [PATCH] Handle application crash in new thread.

The system server will watchdog reboot when the binder thread
be application crash transaction exhaustion at same time.

diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 595b2b356f3f..f28e6d438beb 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -14458,8 +14458,8 @@ public void handleApplicationCrash(IBinder app,
     /* Native crash reporting uses this inner version because it needs to be somewhat
      * decoupled from the AM-managed cleanup lifecycle
      */
-    void handleApplicationCrashInner(String eventType, ProcessRecord r, String processName,
-            ApplicationErrorReport.CrashInfo crashInfo) {
+    void handleApplicationCrashInner(String eventType, final ProcessRecord r, String processName,
+            final ApplicationErrorReport.CrashInfo crashInfo) {
         EventLog.writeEvent(EventLogTags.AM_CRASH, Binder.getCallingPid(),
                 UserHandle.getUserId(Binder.getCallingUid()), processName,
                 r == null ? -1 : r.info.flags,
@@ -14470,7 +14470,12 @@ void handleApplicationCrashInner(String eventType, ProcessRecord r, String proce
 
         addErrorToDropBox(eventType, r, processName, null, null, null, null, null, crashInfo);
 
-        mAppErrors.crashApplication(r, crashInfo);
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                mAppErrors.crashApplication(r, crashInfo);
+            }
+        }).start();
     }
 
     public void handleApplicationStrictModeViolation(
