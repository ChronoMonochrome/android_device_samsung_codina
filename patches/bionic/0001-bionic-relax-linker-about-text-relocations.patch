From 5f937f1d55b4210a5490f338145a7a1f2ea26c25 Mon Sep 17 00:00:00 2001
From: Shilin Victor <chrono.monochrome@gmail.com>
Date: Fri, 4 Mar 2016 17:07:19 +0700
Subject: [PATCH] bionic: relax linker about text relocations

Change-Id: Icc2420a9787d3b06573ea635dc221875e4d86854
---
 linker/linker.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/linker/linker.cpp b/linker/linker.cpp
index a2ef214..58db4b7 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -1993,7 +1993,7 @@ bool soinfo::relocate(const VersionTracker& version_tracker, ElfRelIteratorT&& r
                     reinterpret_cast<void*>(reloc),
                     reinterpret_cast<void*>(load_bias + addend));
         {
-#if !defined(__LP64__)
+#if 0
           // When relocating dso with text_relocation .text segment is
           // not executable. We need to restore elf flags for this
           // particular call.
@@ -2006,7 +2006,7 @@ bool soinfo::relocate(const VersionTracker& version_tracker, ElfRelIteratorT&& r
           }
 #endif
           ElfW(Addr) ifunc_addr = call_ifunc_resolver(load_bias + addend);
-#if !defined(__LP64__)
+#if 0
           // Unprotect it afterwards...
           if (has_text_relocations) {
             if (phdr_table_unprotect_segments(phdr, phnum, load_bias) < 0) {
@@ -2939,7 +2939,7 @@ bool soinfo::link_image(const soinfo_list_t& global_group, const soinfo_list_t&
     return false;
   }
 
-#if !defined(__LP64__)
+#if 0
   if (has_text_relocations) {
     // Fail if app is targeting sdk version > 22
     // TODO (dimitry): remove != __ANDROID_API__ check once http://b/20020312 is fixed
@@ -3027,7 +3027,7 @@ bool soinfo::link_image(const soinfo_list_t& global_group, const soinfo_list_t&
 
   DEBUG("[ finished linking %s ]", get_realpath());
 
-#if !defined(__LP64__)
+#if 0
   if (has_text_relocations) {
     // All relocations are done, we can protect our segments back to read-only.
     if (phdr_table_protect_segments(phdr, phnum, load_bias) < 0) {
-- 
2.5.0

