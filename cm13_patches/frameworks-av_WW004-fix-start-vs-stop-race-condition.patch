MPEG4Writer: fix start vs stop race condition 

diff --git a/media/libstagefright/MPEG4Writer.cpp b/media/libstagefright/MPEG4Writer.cpp
index 44c7ed0..b108078 100644
--- a/media/libstagefright/MPEG4Writer.cpp
+++ b/media/libstagefright/MPEG4Writer.cpp
@@ -104,6 +104,8 @@
         kSampleArraySize = 1000,
     };
 
+    Mutex mLock;
+
     // A helper class to handle faster write box with table entries
     template<class TYPE>
     struct ListTableEntries {
@@ -1828,9 +1828,11 @@ status_t MPEG4Writer::startWriterThread() {
 
 
 status_t MPEG4Writer::Track::start(MetaData *params) {
+    mLock.lock();
     if (!mDone && mPaused) {
         mPaused = false;
         mResumed = true;
+        mLock.unlock();
         return OK;
     }
 
@@ -1873,6 +1873,7 @@ status_t MPEG4Writer::Track::start(MetaData *params) {
     status_t err = mSource->start(meta.get());
     if (err != OK) {
         mDone = mReachedEOS = true;
+        mLock.unlock();
         return err;
     }
 
@@ -1894,6 +1894,7 @@ status_t MPEG4Writer::Track::start(MetaData *params) {
 
     mHFRRatio = AVUtils::get()->HFRUtils().getHFRRatio(mMeta);
 
+    mLock.unlock();
     return OK;
 }
 
@@ -1904,6 +1904,7 @@ status_t MPEG4Writer::Track::pause() {
 }
 
 status_t MPEG4Writer::Track::stop() {
+    mLock.lock();
     ALOGD("Stopping %s track", mIsAudio? "Audio": "Video");
     if (!mStarted) {
         ALOGE("Stop() called but track is not started");
@@ -1912,6 +1912,7 @@ status_t MPEG4Writer::Track::stop() {
     }
 
     if (mDone) {
+        mLock.unlock();
         return OK;
     }
     mDone = true;
@@ -1934,6 +1934,7 @@ status_t MPEG4Writer::Track::stop() {
         ALOGE(" Filesize limit exceeded and zero samples written ");
         return ERROR_END_OF_STREAM;
     }
+    mLock.unlock();
     return err;
 }
 
